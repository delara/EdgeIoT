{"ast":null,"code":"import _classCallCheck from \"/Users/Farhad/Desktop/socket/sensors-dashboard/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/Farhad/Desktop/socket/sensors-dashboard/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Farhad/Desktop/socket/sensors-dashboard/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Farhad/Desktop/socket/sensors-dashboard/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Farhad/Desktop/socket/sensors-dashboard/src/SensorValue.js\";\nimport React, { Component } from 'react';\nimport { Progress } from \"reactstrap\";\n\nvar SensorValue =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SensorValue, _Component);\n\n  function SensorValue() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SensorValue);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SensorValue)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      currentValue: 0,\n      config: {\n        type: 'PROGRESS',\n        lowerThreshold: 0,\n        upperThreshold: 1000\n      }\n    };\n\n    _this.componentWillReceiveProps = function () {\n      if (_this.props.value > _this.state.config.lowerThreshold && _this.props.value < _this.state.config.upperThreshold) {\n        _this.setState({\n          currentValue: _this.props.value\n        });\n      }\n    };\n\n    _this.render = function () {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, function (_) {\n        switch (_this.state.config.type) {\n          case 'NUMBER':\n            return React.createElement(\"p\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 31\n              },\n              __self: this\n            }, _this.state.currentValue.toString());\n\n          case 'PROGRESS':\n            return React.createElement(Progress, {\n              value: _this.state.currentValue.toString(),\n              style: {\n                width: 100,\n                height: 20\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 35\n              },\n              __self: this\n            });\n\n          case 'light':\n            return React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 39\n              },\n              __self: this\n            });\n        }\n      }());\n    };\n\n    return _this;\n  }\n\n  return SensorValue;\n}(Component);\n\nexport default SensorValue;","map":{"version":3,"sources":["/Users/Farhad/Desktop/socket/sensors-dashboard/src/SensorValue.js"],"names":["React","Component","Progress","SensorValue","state","currentValue","config","type","lowerThreshold","upperThreshold","componentWillReceiveProps","props","value","setState","render","_","toString","width","height"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,YAAzB;;IAEMC,W;;;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AACJC,MAAAA,YAAY,EAAE,CADV;AAEJC,MAAAA,MAAM,EAAE;AACJC,QAAAA,IAAI,EAAE,UADF;AAEJC,QAAAA,cAAc,EAAE,CAFZ;AAGJC,QAAAA,cAAc,EAAE;AAHZ;AAFJ,K;;UAURC,yB,GAA4B,YAAM;AAC9B,UAAI,MAAKC,KAAL,CAAWC,KAAX,GAAmB,MAAKR,KAAL,CAAWE,MAAX,CAAkBE,cAArC,IAAuD,MAAKG,KAAL,CAAWC,KAAX,GAAmB,MAAKR,KAAL,CAAWE,MAAX,CAAkBG,cAAhG,EAAgH;AAC5G,cAAKI,QAAL,CAAc;AAAER,UAAAA,YAAY,EAAE,MAAKM,KAAL,CAAWC;AAA3B,SAAd;AACH;AACJ,K;;UAIDE,M,GAAS,YAAM;AACX,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACM,UAAAC,CAAC,EAAI;AACH,gBAAQ,MAAKX,KAAL,CAAWE,MAAX,CAAkBC,IAA1B;AACI,eAAK,QAAL;AACI,mBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAI,MAAKH,KAAL,CAAWC,YAAX,CAAwBW,QAAxB,EAAJ,CADJ;;AAGJ,eAAK,UAAL;AACI,mBACI,oBAAC,QAAD;AAAU,cAAA,KAAK,EAAE,MAAKZ,KAAL,CAAWC,YAAX,CAAwBW,QAAxB,EAAjB;AAAqD,cAAA,KAAK,EAAE;AAAEC,gBAAAA,KAAK,EAAE,GAAT;AAAcC,gBAAAA,MAAM,EAAE;AAAtB,eAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;;AAGJ,eAAK,OAAL;AACI,mBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAVR;AAcH,OAfA,EADL,CADJ;AAsBH,K;;;;;;EA3CqBjB,S;;AA8C1B,eAAeE,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Progress } from \"reactstrap\";\n\nclass SensorValue extends Component {\n\n    state = {\n        currentValue: 0,\n        config: {\n            type: 'PROGRESS',\n            lowerThreshold: 0,\n            upperThreshold: 1000\n\n        }\n    }\n\n    componentWillReceiveProps = () => {\n        if (this.props.value > this.state.config.lowerThreshold && this.props.value < this.state.config.upperThreshold) {\n            this.setState({ currentValue: this.props.value })\n        }\n    }\n\n\n\n    render = () => {\n        return (\n            <div>\n                {(_ => {\n                    switch (this.state.config.type) {\n                        case 'NUMBER':\n                            return (\n                                <p>{this.state.currentValue.toString()}</p>\n                            )\n                        case 'PROGRESS':\n                            return (\n                                <Progress value={this.state.currentValue.toString()} style={{ width: 100, height: 20 }} />\n                            )\n                        case 'light':\n                            return (\n                                <div ></div>\n                            )\n                    }\n                })()\n\n                }\n            </div>\n        )\n    }\n}\n\nexport default SensorValue;"]},"metadata":{},"sourceType":"module"}