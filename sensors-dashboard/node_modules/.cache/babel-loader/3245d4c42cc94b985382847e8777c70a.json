{"ast":null,"code":"import _classCallCheck from \"/Users/Farhad/Desktop/socket/sensors-dashboard/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/Farhad/Desktop/socket/sensors-dashboard/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Farhad/Desktop/socket/sensors-dashboard/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Farhad/Desktop/socket/sensors-dashboard/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Farhad/Desktop/socket/sensors-dashboard/src/Settings.js\";\nimport React, { Component } from 'react';\nimport { Row, Col, InputGroup, Input, InputGroupAddon, PopoverBody, Popover, Button, Spinner } from \"reactstrap\";\nimport axios from \"axios\";\nimport './Settings.css';\nimport { FaPlus } from \"react-icons/fa\";\nimport Switch from \"react-switch\";\n\nvar Settings =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Settings, _Component);\n\n  function Settings() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Settings);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Settings)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      sensors: [],\n      actuators: [],\n      showUrl: false,\n      send_data: false,\n      url: '',\n      addSensorPopover: false,\n      addActuatorPopover: false,\n      addSensorLoading: false,\n      addSensorError: '',\n      addActuatorLoading: false,\n      addActuatorError: '',\n      sensorName: '',\n      sensorXbeeId: '',\n      sensorIOPin: '',\n      actuatorName: '',\n      actuatorAddress: '',\n      actuatorConfigPopover: false,\n      setActuatorConfigError: '',\n      setActuatorConfigLoading: false,\n      currentActuatorId: ''\n    };\n\n    _this.componentDidMount = function () {\n      _this.getSensors();\n\n      _this.getActuators();\n\n      _this.getConfig();\n    };\n\n    _this.getConfig = function () {\n      axios.get('http://0.0.0.0:5000/config').then(function (res) {\n        _this.setState({\n          config: res.data\n        });\n\n        console.log(res.data);\n      });\n    };\n\n    _this.getSensors = function () {\n      axios.get('http://0.0.0.0:5000/sensors').then(function (res) {\n        var sensors = [];\n\n        for (var sensorKey in JSON.parse(res.data.sensors)) {\n          sensors.push(JSON.parse(res.data.sensors)[sensorKey]);\n        }\n\n        _this.setState({\n          sensors: sensors\n        });\n\n        console.log(sensors);\n      });\n    };\n\n    _this.getActuators = function () {\n      axios.get('http://0.0.0.0:5000/actuators').then(function (res) {\n        var actuators = [];\n        console.log(res.data);\n\n        for (var actuatorKey in JSON.parse(res.data.actuators)) {\n          actuators.push(JSON.parse(res.data.actuators)[actuatorKey]);\n        }\n\n        _this.setState({\n          actuators: actuators\n        });\n\n        console.log(actuators);\n      });\n    };\n\n    _this.addSensor = function () {\n      _this.setState({\n        addSensorLoading: true,\n        addSensorError: ''\n      });\n\n      axios.post('http://0.0.0.0:5000/sensors', {\n        name: _this.state.sensorName,\n        xbeeAddress: _this.state.sensorXbeeId,\n        IOLine: _this.state.sensorIOPin\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(function (res) {\n        _this.setState({\n          addSensorLoading: false,\n          addSensorPopover: false\n        });\n\n        _this.getSensors();\n      }).catch(function (err) {\n        _this.setState({\n          addSensorLoading: false,\n          addSensorError: JSON.parse(JSON.stringify(err.response.data))\n        });\n      });\n    };\n\n    _this.addActuator = function () {\n      _this.setState({\n        addActuatorLoading: true,\n        addActuatorError: ''\n      });\n\n      axios.post('http://0.0.0.0:5000/actuators', {\n        name: _this.state.actuatorName,\n        plugAddress: _this.state.actuatorAddress\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(function (res) {\n        _this.setState({\n          addActuatorError: false,\n          addActuatorPopover: false\n        });\n\n        _this.getActuators();\n      }).catch(function (err) {\n        _this.setState({\n          addActuatorLoading: false,\n          addActuatorError: JSON.parse(JSON.stringify(err.response.data))\n        });\n      });\n    };\n\n    _this.render = function () {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Sensors: \"), _this.state.sensors.map(function (sensor) {\n        return React.createElement(\"div\", {\n          key: sensor.sensorId,\n          className: \"sensor\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          style: {\n            fontSize: 20,\n            marginBottom: 0\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, sensor.name), React.createElement(\"p\", {\n          style: {\n            fontSize: 4\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, sensor.sensorId), React.createElement(\"img\", {\n          style: {\n            width: 50,\n            height: 50\n          },\n          src: require('./sensor.png'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }));\n      }), React.createElement(\"div\", {\n        className: \"sensor sensor__add\",\n        id: \"sensor-add\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(FaPlus, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Actuators: \"), _this.state.actuators.map(function (actuator) {\n        return React.createElement(\"div\", {\n          key: actuator.actuatorId,\n          className: \"actuator\",\n          onClick: function onClick(_) {\n            _this.setState({\n              currentActuatorId: actuator.actuatorId,\n              actuatorConfigPopover: true\n            });\n          },\n          id: actuator.actuatorId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          style: {\n            fontSize: 20,\n            marginBottom: 0\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }, actuator.name), React.createElement(\"p\", {\n          style: {\n            fontSize: 4\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, actuator.actuatorId), React.createElement(\"img\", {\n          style: {\n            width: 30,\n            height: 30,\n            marginTop: 10\n          },\n          src: require('./actuator.png'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }));\n      }), React.createElement(\"div\", {\n        className: \"actuator actuator__add\",\n        id: \"actuator-add\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(FaPlus, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        className: \"mt-5 ml-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, _this.state.showUrl ? React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(Input, {\n        onChange: function onChange(event) {\n          return _this.setState({\n            url: event.target.value\n          });\n        },\n        value: _this.state.url,\n        placeholder: \"URL of destination\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }), React.createElement(InputGroupAddon, {\n        addonType: \"append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      })) : React.createElement(\"p\", {\n        onClick: function onClick(_) {\n          return _this.setState({\n            showUrl: true\n          });\n        },\n        style: {\n          color: 'blue',\n          cursor: 'pointer'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"send data\")), React.createElement(Popover, {\n        placement: \"right-end\",\n        className: \"add-sensor-popover\",\n        isOpen: _this.state.addSensorPopover,\n        trigger: \"legacy\",\n        target: \"sensor-add\",\n        toggle: function toggle(_) {\n          return _this.setState(function (prevState) {\n            return {\n              addSensorPopover: !prevState.addSensorPopover\n            };\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(PopoverBody, {\n        className: \"add-sensor-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Add Sensor\"), React.createElement(InputGroup, {\n        className: \"add-sensor-form__input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"Name\"), React.createElement(Input, {\n        value: _this.state.sensorName,\n        onChange: function onChange(e) {\n          return _this.setState({\n            sensorName: e.target.value\n          });\n        },\n        placeholder: \"Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      })), React.createElement(InputGroup, {\n        className: \"add-sensor-form__input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"Xbee Id\"), React.createElement(Input, {\n        value: _this.state.sensorXbeeId,\n        onChange: function onChange(e) {\n          return _this.setState({\n            sensorXbeeId: e.target.value\n          });\n        },\n        placeholder: \"Xbee Id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      })), React.createElement(InputGroup, {\n        className: \"add-sensor-form__input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"Input Pin\"), React.createElement(Input, {\n        value: _this.state.sensorIOPin,\n        onChange: function onChange(e) {\n          return _this.setState({\n            sensorIOPin: e.target.value\n          });\n        },\n        placeholder: \"Input Pin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        className: \"add-sensor-form__error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, _this.state.addSensorError), React.createElement(Button, {\n        className: \"add-sensor-form__button\",\n        onClick: _this.addSensor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, _this.state.addSensorLoading ? React.createElement(Spinner, {\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }) : 'Add Sensor'))), React.createElement(Popover, {\n        className: \"add-actuator-popover\",\n        isOpen: _this.state.addActuatorPopover,\n        trigger: \"legacy\",\n        target: \"actuator-add\",\n        toggle: function toggle(_) {\n          return _this.setState(function (prevState) {\n            return {\n              addActuatorPopover: !prevState.addActuatorPopover\n            };\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(PopoverBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"Add Actuator\"), React.createElement(InputGroup, {\n        className: \"add-actuator-form__input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"Name\"), React.createElement(Input, {\n        value: _this.state.actuatorName,\n        onChange: function onChange(e) {\n          return _this.setState({\n            actuatorName: e.target.value\n          });\n        },\n        placeholder: \"Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      })), React.createElement(InputGroup, {\n        className: \"add-actuator-form__input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \"Plug Address\"), React.createElement(Input, {\n        value: _this.state.actuatorAddress,\n        onChange: function onChange(e) {\n          return _this.setState({\n            actuatorAddress: e.target.value\n          });\n        },\n        placeholder: \"Xbee Id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        className: \"add-actuator-form__error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, _this.state.addActuatorError), React.createElement(Button, {\n        className: \"add-actuator-form__button\",\n        onClick: _this.addActuator,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, _this.state.addActuatorLoading ? React.createElement(Spinner, {\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }) : 'Add Actuator'))), React.createElement(Popover, {\n        className: \"add-actuator-popover\",\n        isOpen: _this.state.actuatorConfigPopover,\n        trigger: \"legacy\",\n        target: function target(_) {\n          return window.document.getElementById(_this.state.currentActuatorId);\n        },\n        toggle: function toggle(_) {\n          return _this.setState(function (prevState) {\n            return {\n              actuatorConfigPopover: !prevState.actuatorConfigPopover\n            };\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(PopoverBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, \"Actuator\"), React.createElement(Switch, {\n        onChange: function onChange(_) {},\n        checked: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"add-actuator-form__error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, _this.state.setActuatorConfigError), React.createElement(Button, {\n        className: \"add-actuator-form__button\",\n        onClick: _this.addActuator,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, _this.state.setActuatorConfigLoading ? React.createElement(Spinner, {\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }) : 'Done'))));\n    };\n\n    return _this;\n  }\n\n  return Settings;\n}(Component);\n\nexport default Settings;","map":{"version":3,"sources":["/Users/Farhad/Desktop/socket/sensors-dashboard/src/Settings.js"],"names":["React","Component","Row","Col","InputGroup","Input","InputGroupAddon","PopoverBody","Popover","Button","Spinner","axios","FaPlus","Switch","Settings","state","sensors","actuators","showUrl","send_data","url","addSensorPopover","addActuatorPopover","addSensorLoading","addSensorError","addActuatorLoading","addActuatorError","sensorName","sensorXbeeId","sensorIOPin","actuatorName","actuatorAddress","actuatorConfigPopover","setActuatorConfigError","setActuatorConfigLoading","currentActuatorId","componentDidMount","getSensors","getActuators","getConfig","get","then","res","setState","config","data","console","log","sensorKey","JSON","parse","push","actuatorKey","addSensor","post","name","xbeeAddress","IOLine","headers","catch","err","stringify","response","addActuator","plugAddress","render","map","sensor","sensorId","fontSize","marginBottom","width","height","require","actuator","actuatorId","_","marginTop","event","target","value","color","cursor","prevState","e","window","document","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Row,\n    Col,\n    InputGroup,\n    Input,\n    InputGroupAddon,\n    PopoverBody,\n    Popover,\n    Button,\n    Spinner\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport './Settings.css';\nimport { FaPlus } from \"react-icons/fa\";\nimport Switch from \"react-switch\";\n\n\nclass Settings extends Component {\n\n    state = {\n        sensors: [],\n        actuators: [],\n        showUrl: false,\n        send_data: false,\n        url: '',\n        addSensorPopover: false,\n        addActuatorPopover: false,\n        addSensorLoading: false,\n        addSensorError: '',\n        addActuatorLoading: false,\n        addActuatorError: '',\n        sensorName: '',\n        sensorXbeeId: '',\n        sensorIOPin: '',\n        actuatorName: '',\n        actuatorAddress: '',\n        actuatorConfigPopover: false,\n        setActuatorConfigError: '',\n        setActuatorConfigLoading: false,\n        currentActuatorId: ''\n    }\n\n    componentDidMount = () => {\n        this.getSensors()\n        this.getActuators()\n        this.getConfig()\n    }\n\n    getConfig = () => {\n\n        axios.get('http://0.0.0.0:5000/config')\n            .then(\n                res => {\n                    \n                    this.setState({ config: res.data })\n                    console.log(res.data)\n                }\n            )\n    }\n\n    getSensors = () => {\n\n        axios.get('http://0.0.0.0:5000/sensors')\n            .then(\n                res => {\n                    var sensors = []\n                    for (var sensorKey in JSON.parse(res.data.sensors)) {\n                        sensors.push(JSON.parse(res.data.sensors)[sensorKey])\n                    }\n                    this.setState({ sensors })\n                    console.log(sensors)\n                }\n            )\n    }\n\n    getActuators = () => {\n\n        axios.get('http://0.0.0.0:5000/actuators')\n            .then(\n                res => {\n                    var actuators = []\n                    console.log(res.data)\n                    for (var actuatorKey in JSON.parse(res.data.actuators)) {\n                        actuators.push(JSON.parse(res.data.actuators)[actuatorKey])\n                    }\n                    this.setState({ actuators })\n                    console.log(actuators)\n                }\n            )\n    }\n\n    addSensor = () => {\n        this.setState({ addSensorLoading: true, addSensorError: '' })\n        axios.post('http://0.0.0.0:5000/sensors', {\n            name: this.state.sensorName,\n            xbeeAddress: this.state.sensorXbeeId,\n            IOLine: this.state.sensorIOPin\n        }, { headers: { 'Content-Type': 'application/json' } })\n            .then(\n                res => {\n                    this.setState({ addSensorLoading: false, addSensorPopover: false })\n                    this.getSensors()\n                }\n            )\n            .catch(err => {\n                this.setState({ addSensorLoading: false, addSensorError: JSON.parse(JSON.stringify(err.response.data)) })\n            })\n    }\n\n    addActuator = () => {\n        this.setState({ addActuatorLoading: true, addActuatorError: '' })\n        axios.post('http://0.0.0.0:5000/actuators', {\n            name: this.state.actuatorName,\n            plugAddress: this.state.actuatorAddress\n        }, { headers: { 'Content-Type': 'application/json' } })\n            .then(\n                res => {\n                    this.setState({ addActuatorError: false, addActuatorPopover: false })\n                    this.getActuators()\n                }\n            )\n            .catch(err => {\n                this.setState({ addActuatorLoading: false, addActuatorError: JSON.parse(JSON.stringify(err.response.data)) })\n            })\n    }\n\n    render = () => {\n        return (\n            <div>\n                <Row className=\"container\">\n                    <h4 className=\"label\">Sensors: </h4>\n                    {this.state.sensors.map(sensor => (\n                        <div key={sensor.sensorId} className=\"sensor\">\n                            <p style={{ fontSize: 20, marginBottom: 0 }}>{sensor.name}</p>\n                            <p style={{ fontSize: 4 }}>{sensor.sensorId}</p>\n                            <img style={{ width: 50, height: 50 }} src={require('./sensor.png')} />\n                        </div>\n                    ))}\n                    <div className=\"sensor sensor__add\" id=\"sensor-add\">\n                        <FaPlus />\n                    </div>\n                </Row>\n                <Row className=\"container\">\n                    <h4 className=\"label\">Actuators: </h4>\n                    {this.state.actuators.map(actuator => (\n                        <div key={actuator.actuatorId} className=\"actuator\" onClick={_ => {\n                            this.setState({ currentActuatorId: actuator.actuatorId, actuatorConfigPopover: true })\n                        }} id={actuator.actuatorId}>\n                            <p style={{ fontSize: 20, marginBottom: 0 }}>{actuator.name}</p>\n                            <p style={{ fontSize: 4 }}>{actuator.actuatorId}</p>\n                            <img style={{ width: 30, height: 30, marginTop: 10 }} src={require('./actuator.png')} />\n                        </div>\n                    ))}\n                    <div className=\"actuator actuator__add\" id=\"actuator-add\">\n                        <FaPlus />\n                    </div>\n                </Row>\n\n                <Row className='mt-5 ml-5'>\n                    {this.state.showUrl ? (\n                        <InputGroup>\n                            <Input onChange={event => this.setState({ url: event.target.value })} value={this.state.url} placeholder=\"URL of destination\" />\n                            <InputGroupAddon addonType=\"append\">\n                                {/* <Button\n                                        onClick={_ => {\n                                            this.setState(prevState => ({ send_data: !prevState.send_data }),\n                                                _ => io.emit('url_info', { url: this.state.url, send_data: this.state.send_data })\n                                            )\n                                        }}\n                                        style={{ backgroundColor: this.state.send_data ? 'red' : 'green' }}>{this.state.send_data ? 'STOP' : 'SEND'}</Button> */}\n                            </InputGroupAddon>\n                        </InputGroup>\n                    ) : (\n                            <p onClick={_ => this.setState({ showUrl: true })} style={{ color: 'blue', cursor: 'pointer' }}>send data</p>\n                        )}\n                </Row>\n\n                <Popover placement=\"right-end\" className=\"add-sensor-popover\" isOpen={this.state.addSensorPopover} trigger='legacy' target=\"sensor-add\" toggle={_ => this.setState(prevState => ({ addSensorPopover: !prevState.addSensorPopover }))}>\n\n                    <PopoverBody className=\"add-sensor-form\">\n                        <h5>Add Sensor</h5>\n                        <InputGroup className=\"add-sensor-form__input\">\n                            <InputGroupAddon addonType=\"prepend\" >Name</InputGroupAddon>\n                            <Input value={this.state.sensorName} onChange={e => this.setState({ sensorName: e.target.value })} placeholder=\"Name\" />\n                        </InputGroup>\n                        <InputGroup className=\"add-sensor-form__input\">\n                            <InputGroupAddon addonType=\"prepend\" >Xbee Id</InputGroupAddon>\n                            <Input value={this.state.sensorXbeeId} onChange={e => this.setState({ sensorXbeeId: e.target.value })} placeholder=\"Xbee Id\" />\n                        </InputGroup>\n                        <InputGroup className=\"add-sensor-form__input\">\n                            <InputGroupAddon addonType=\"prepend\" >Input Pin</InputGroupAddon>\n                            <Input value={this.state.sensorIOPin} onChange={e => this.setState({ sensorIOPin: e.target.value })} placeholder=\"Input Pin\" />\n                        </InputGroup>\n                        <p className=\"add-sensor-form__error\">{this.state.addSensorError}</p>\n                        <Button\n                            className=\"add-sensor-form__button\"\n                            onClick={this.addSensor}\n                        >\n                            {this.state.addSensorLoading ? (<Spinner size=\"sm\" />) : ('Add Sensor')}\n                        </Button>\n\n                    </PopoverBody>\n\n                </Popover>\n\n                <Popover className=\"add-actuator-popover\" isOpen={this.state.addActuatorPopover} trigger='legacy' target=\"actuator-add\" toggle={_ => this.setState(prevState => ({ addActuatorPopover: !prevState.addActuatorPopover }))}>\n                    <PopoverBody>\n                        <h5>Add Actuator</h5>\n                        <InputGroup className=\"add-actuator-form__input\">\n                            <InputGroupAddon addonType=\"prepend\" >Name</InputGroupAddon>\n                            <Input value={this.state.actuatorName} onChange={e => this.setState({ actuatorName: e.target.value })} placeholder=\"Name\" />\n                        </InputGroup>\n                        <InputGroup className=\"add-actuator-form__input\">\n                            <InputGroupAddon addonType=\"prepend\" >Plug Address</InputGroupAddon>\n                            <Input value={this.state.actuatorAddress} onChange={e => this.setState({ actuatorAddress: e.target.value })} placeholder=\"Xbee Id\" />\n                        </InputGroup>\n                        <p className=\"add-actuator-form__error\">{this.state.addActuatorError}</p>\n                        <Button\n                            className=\"add-actuator-form__button\"\n                            onClick={this.addActuator}>\n                            {this.state.addActuatorLoading ? (<Spinner size=\"sm\" />) : ('Add Actuator')}\n                        </Button>\n                    </PopoverBody>\n                </Popover>\n\n                <Popover className=\"add-actuator-popover\" isOpen={this.state.actuatorConfigPopover} trigger='legacy' target={_ => window.document.getElementById(this.state.currentActuatorId)} toggle={_ => this.setState(prevState => ({ actuatorConfigPopover: !prevState.actuatorConfigPopover }))}>\n                    <PopoverBody>\n                        <h5>Actuator</h5>\n                        <Switch onChange={_ => { }} checked={false} />\n                        <p className=\"add-actuator-form__error\">{this.state.setActuatorConfigError}</p>\n                        <Button\n                            className=\"add-actuator-form__button\"\n                            onClick={this.addActuator}>\n                            {this.state.setActuatorConfigLoading ? (<Spinner size=\"sm\" />) : ('Done')}\n                        </Button>\n                    </PopoverBody>\n                </Popover>\n\n            </div>\n        )\n    }\n}\n\nexport default Settings"]},"metadata":{},"sourceType":"module"}