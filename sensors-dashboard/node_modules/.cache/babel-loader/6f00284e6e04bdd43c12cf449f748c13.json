{"ast":null,"code":"import _objectSpread from \"/Users/Farhad/Desktop/socket/sensors-dashboard/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/Farhad/Desktop/socket/sensors-dashboard/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/Farhad/Desktop/socket/sensors-dashboard/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Farhad/Desktop/socket/sensors-dashboard/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Farhad/Desktop/socket/sensors-dashboard/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Farhad/Desktop/socket/sensors-dashboard/src/SensorValue.js\";\nimport React, { Component } from 'react';\nimport { Progress, Popover, PopoverBody, InputGroup, Input, InputGroupAddon, UncontrolledDropdown, DropdownItem, DropdownToggle, DropdownMenu } from \"reactstrap\";\nimport { FaCog } from \"react-icons/fa\";\nimport './sensorValue.css';\n\nvar SensorValue =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SensorValue, _Component);\n\n  function SensorValue() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SensorValue);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SensorValue)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      currentValue: 0,\n      config: {\n        type: 'PROGRESS',\n        lowerThreshold: 0,\n        upperThreshold: 2000,\n        lightValue: 0\n      },\n      ValueConfigPopover: false\n    };\n\n    _this.componentWillReceiveProps = function () {\n      if (_this.props.value > _this.state.config.lowerThreshold && _this.props.value < _this.state.config.upperThreshold) {\n        _this.setState({\n          currentValue: _this.props.value\n        });\n      }\n    };\n\n    _this.render = function () {\n      return React.createElement(\"div\", {\n        className: \"sensor-value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"sensor-value__display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, function (_) {\n        switch (_this.state.config.type) {\n          case 'NUMBER':\n            return React.createElement(\"p\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 47\n              },\n              __self: this\n            }, _this.state.currentValue.toString());\n\n          case 'PROGRESS':\n            return React.createElement(Progress, {\n              max: _this.state.config.upperThreshold - _this.state.config.lowerThreshold,\n              value: (_this.state.currentValue - _this.state.config.lowerThreshold).toString(),\n              style: {\n                width: 200,\n                height: 20\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 51\n              },\n              __self: this\n            });\n\n          case 'LIGHT':\n            return React.createElement(\"div\", {\n              className: \"sensor-value__light\",\n              style: {\n                backgroundColor: _this.state.currentValue < _this.state.config.lightValue ? 'red' : 'green'\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 55\n              },\n              __self: this\n            });\n        }\n      }()), React.createElement(Popover, {\n        placement: \"right-end\",\n        className: \"value-display-popover\",\n        isOpen: _this.state.ValueConfigPopover,\n        trigger: \"legacy\",\n        target: function target(_) {\n          return window.document.getElementById(_this.props.sensor.sensorId);\n        },\n        toggle: function toggle(_) {\n          return _this.setState(function (prevState) {\n            return {\n              ValueConfigPopover: !prevState.ValueConfigPopover\n            };\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(PopoverBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        className: \"add-sensor-form__input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Type\"), React.createElement(UncontrolledDropdown, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(DropdownToggle, {\n        caret: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, _this.state.config.type || 'Select a type'), React.createElement(DropdownMenu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(DropdownItem, {\n        header: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Select Type\"), React.createElement(DropdownItem, {\n        onClick: function onClick(_) {\n          return _this.setState(function (prevState) {\n            return _objectSpread({}, prevState, {\n              config: _objectSpread({}, prevState.config, {\n                type: 'NUMBER'\n              })\n            });\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Number\"), React.createElement(DropdownItem, {\n        onClick: function onClick(_) {\n          return _this.setState(function (prevState) {\n            return _objectSpread({}, prevState, {\n              config: _objectSpread({}, prevState.config, {\n                type: 'PROGRESS'\n              })\n            });\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Progress\"), React.createElement(DropdownItem, {\n        onClick: function onClick(_) {\n          return _this.setState(function (prevState) {\n            return _objectSpread({}, prevState, {\n              config: _objectSpread({}, prevState.config, {\n                type: 'LIGHT'\n              })\n            });\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Light\")))), React.createElement(InputGroup, {\n        className: \"add-sensor-form__input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Lower Threshold\"), React.createElement(Input, {\n        value: _this.state.config.lowerThreshold,\n        onChange: function onChange(e) {\n          e.persist();\n\n          _this.setState(function (prevState) {\n            return _objectSpread({}, prevState, {\n              config: _objectSpread({}, prevState.config, {\n                lowerThreshold: e.target.value\n              })\n            });\n          });\n        },\n        placeholder: \"Lower Threshold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })), React.createElement(InputGroup, {\n        className: \"add-sensor-form__input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Upper Threshold\"), React.createElement(Input, {\n        value: _this.state.config.upperThreshold,\n        onChange: function onChange(e) {\n          e.persist();\n\n          _this.setState(function (prevState) {\n            return _objectSpread({}, prevState, {\n              config: _objectSpread({}, prevState.config, {\n                upperThreshold: e.target.value\n              })\n            });\n          });\n        },\n        placeholder: \"Upper threshold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })), _this.state.config.type === 'LIGHT' && React.createElement(InputGroup, {\n        className: \"add-sensor-form__input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Switch Value\"), React.createElement(Input, {\n        value: _this.state.config.upperThreshold,\n        onChange: function onChange(e) {\n          e.persist();\n\n          _this.setState(function (prevState) {\n            return _objectSpread({}, prevState, {\n              config: _objectSpread({}, prevState.config, {\n                lightValue: e.target.value\n              })\n            });\n          });\n        },\n        placeholder: \"Switch Value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      })))), React.createElement(FaCog, {\n        id: _this.props.sensor.sensorId,\n        style: {\n          marginLeft: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }));\n    };\n\n    return _this;\n  }\n\n  return SensorValue;\n}(Component);\n\nexport default SensorValue;","map":{"version":3,"sources":["/Users/Farhad/Desktop/socket/sensors-dashboard/src/SensorValue.js"],"names":["React","Component","Progress","Popover","PopoverBody","InputGroup","Input","InputGroupAddon","UncontrolledDropdown","DropdownItem","DropdownToggle","DropdownMenu","FaCog","SensorValue","state","currentValue","config","type","lowerThreshold","upperThreshold","lightValue","ValueConfigPopover","componentWillReceiveProps","props","value","setState","render","_","toString","width","height","backgroundColor","window","document","getElementById","sensor","sensorId","prevState","e","persist","target","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Progress,\n    Popover,\n    PopoverBody,\n    InputGroup,\n    Input,\n    InputGroupAddon,\n    UncontrolledDropdown,\n    DropdownItem,\n    DropdownToggle,\n    DropdownMenu\n} from \"reactstrap\";\nimport { FaCog } from \"react-icons/fa\";\nimport './sensorValue.css'\n\nclass SensorValue extends Component {\n\n    state = {\n        currentValue: 0,\n        config: {\n            type: 'PROGRESS',\n            lowerThreshold: 0,\n            upperThreshold: 2000,\n            lightValue: 0\n\n        },\n        ValueConfigPopover: false\n    }\n\n    componentWillReceiveProps = () => {\n        if (this.props.value > this.state.config.lowerThreshold && this.props.value < this.state.config.upperThreshold) {\n            this.setState({ currentValue: this.props.value })\n        }\n    }\n\n\n\n    render = () => {\n        return (\n            <div className='sensor-value'>\n                <div className='sensor-value__display'>\n                    {(_ => {\n                        switch (this.state.config.type) {\n                            case 'NUMBER':\n                                return (\n                                    <p>{this.state.currentValue.toString()}</p>\n                                )\n                            case 'PROGRESS':\n                                return (\n                                    <Progress max={this.state.config.upperThreshold - this.state.config.lowerThreshold} value={(this.state.currentValue - this.state.config.lowerThreshold).toString()} style={{ width: 200, height: 20 }} />\n                                )\n                            case 'LIGHT':\n                                return (\n                                    <div className='sensor-value__light' style={{ backgroundColor: (this.state.currentValue < this.state.config.lightValue) ? 'red' : 'green' }} />\n                                )\n                        }\n                    })()\n\n                    }\n                </div>\n                <Popover placement=\"right-end\" className=\"value-display-popover\" isOpen={this.state.ValueConfigPopover} trigger='legacy' target={_ => window.document.getElementById(this.props.sensor.sensorId)} toggle={_ => this.setState(prevState => ({ ValueConfigPopover: !prevState.ValueConfigPopover }))}>\n                    <PopoverBody>\n                        <InputGroup className=\"add-sensor-form__input\">\n                            <InputGroupAddon addonType=\"prepend\" >Type</InputGroupAddon>\n                            <UncontrolledDropdown>\n                                <DropdownToggle caret>\n                                    {this.state.config.type || 'Select a type'}\n                                </DropdownToggle>\n                                <DropdownMenu>\n                                    <DropdownItem header>Select Type</DropdownItem>\n                                    <DropdownItem onClick={_ => this.setState(prevState => ({ ...prevState, config: { ...prevState.config, type: 'NUMBER' } }))}>Number</DropdownItem>\n                                    <DropdownItem onClick={_ => this.setState(prevState => ({ ...prevState, config: { ...prevState.config, type: 'PROGRESS' } }))}>Progress</DropdownItem>\n                                    <DropdownItem onClick={_ => this.setState(prevState => ({ ...prevState, config: { ...prevState.config, type: 'LIGHT' } }))}>Light</DropdownItem>\n                                </DropdownMenu>\n                            </UncontrolledDropdown>\n                        </InputGroup>\n                        <InputGroup className=\"add-sensor-form__input\">\n                            <InputGroupAddon addonType=\"prepend\" >Lower Threshold</InputGroupAddon>\n                            <Input value={this.state.config.lowerThreshold} onChange={e => {\n                                e.persist()\n                                this.setState(prevState => ({ ...prevState, config: { ...prevState.config, lowerThreshold: e.target.value } }))\n                            }} placeholder=\"Lower Threshold\" />\n                        </InputGroup>\n                        <InputGroup className=\"add-sensor-form__input\">\n                            <InputGroupAddon addonType=\"prepend\" >Upper Threshold</InputGroupAddon>\n                            <Input value={this.state.config.upperThreshold} onChange={e => {\n                                e.persist()\n                                this.setState(prevState => ({ ...prevState, config: { ...prevState.config, upperThreshold: e.target.value } }))\n                            }} placeholder=\"Upper threshold\" />\n                        </InputGroup>\n                        {this.state.config.type === 'LIGHT' && (\n                            <InputGroup className=\"add-sensor-form__input\">\n                                <InputGroupAddon addonType=\"prepend\" >Switch Value</InputGroupAddon>\n                                <Input value={this.state.config.upperThreshold} onChange={e => {\n                                    e.persist()\n                                    this.setState(prevState => ({ ...prevState, config: { ...prevState.config, lightValue: e.target.value } }))\n                                }} placeholder=\"Switch Value\" />\n                            </InputGroup>\n                        )}\n\n\n                    </PopoverBody>\n                </Popover>\n                <FaCog id={this.props.sensor.sensorId} style={{ marginLeft: 20 }} />\n            </div>\n        )\n    }\n}\n\nexport default SensorValue;"]},"metadata":{},"sourceType":"module"}