{"ast":null,"code":"import _classCallCheck from \"/Users/Farhad/Desktop/socket/sensors-dashboard/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/Farhad/Desktop/socket/sensors-dashboard/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Farhad/Desktop/socket/sensors-dashboard/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Farhad/Desktop/socket/sensors-dashboard/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Farhad/Desktop/socket/sensors-dashboard/src/Settings.js\";\nimport React, { Component } from 'react';\nimport { Row, Col, InputGroup, Input, InputGroupAddon, PopoverBody, Popover, Button, Spinner } from \"reactstrap\";\nimport axios from \"axios\";\nimport './Settings.css';\nimport { FaPlus } from \"react-icons/fa\";\n\nvar Settings =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Settings, _Component);\n\n  function Settings() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Settings);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Settings)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      sensors: [],\n      showUrl: false,\n      send_data: false,\n      url: '',\n      addSensorPopover: false,\n      addActuatorPopover: false,\n      addSensorLoading: false,\n      addSensorError: 'Could not add',\n      sensorName: '',\n      sensorXbeeId: '',\n      sensorIOPin: ''\n    };\n\n    _this.componentDidMount = function () {\n      _this.getSensors();\n    };\n\n    _this.getSensors = function () {\n      axios.get('http://0.0.0.0:5000/sensors').then(function (res) {\n        console.log(JSON.parse(res.data.sensors));\n      });\n    };\n\n    _this.addSensor = function () {\n      _this.setState({\n        addSensorLoading: true,\n        addSensorError: ''\n      });\n\n      axios.post('http://0.0.0.0:5000/sensors', {\n        name: _this.state.sensorName,\n        xbeeAddress: _this.state.sensorXbeeId,\n        IOLine: _this.state.sensorIOPin\n      }).then(function (res) {\n        _this.setState({\n          addSensorLoading: false\n        });\n\n        console.log(JSON.parse(res.data.sensors));\n      }).catch(function (_) {\n        _this.setState({\n          addSensorLoading: false,\n          addSensorError: 'Could not add the sensor'\n        });\n\n        console.log(_);\n      });\n    };\n\n    _this.render = function () {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Sensors: \"), React.createElement(\"div\", {\n        className: \"sensor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"sensor sensor__add\",\n        id: \"sensor-add\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(FaPlus, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Actuators: \"), React.createElement(\"div\", {\n        className: \"actuator\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"actuator actuator__add\",\n        id: \"actuator-add\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(FaPlus, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        className: \"mt-5 ml-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, _this.state.showUrl ? React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Input, {\n        onChange: function onChange(event) {\n          return _this.setState({\n            url: event.target.value\n          });\n        },\n        value: _this.state.url,\n        placeholder: \"URL of destination\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(InputGroupAddon, {\n        addonType: \"append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      })) : React.createElement(\"p\", {\n        onClick: function onClick(_) {\n          return _this.setState({\n            showUrl: true\n          });\n        },\n        style: {\n          color: 'blue',\n          cursor: 'pointer'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"send data\")), React.createElement(Popover, {\n        placement: \"right-end\",\n        className: \"add-sensor-popover\",\n        isOpen: _this.state.addSensorPopover,\n        trigger: \"legacy\",\n        target: \"sensor-add\",\n        toggle: function toggle(_) {\n          return _this.setState(function (prevState) {\n            return {\n              addSensorPopover: !prevState.addSensorPopover\n            };\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(PopoverBody, {\n        className: \"add-sensor-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Add Sensor\"), React.createElement(InputGroup, {\n        className: \"add-sensor-form__input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Name\"), React.createElement(Input, {\n        value: _this.state.sensorName,\n        onChange: function onChange(e) {\n          return _this.setState({\n            sensorName: e.target.value\n          });\n        },\n        placeholder: \"Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      })), React.createElement(InputGroup, {\n        className: \"add-sensor-form__input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Xbee Id\"), React.createElement(Input, {\n        value: _this.state.sensorXbeeId,\n        onChange: function onChange(e) {\n          return _this.setState({\n            sensorXbeeId: e.target.value\n          });\n        },\n        placeholder: \"Xbee Id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      })), React.createElement(InputGroup, {\n        className: \"add-sensor-form__input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Input Pin\"), React.createElement(Input, {\n        value: _this.state.sensorIOPin,\n        onChange: function onChange(e) {\n          return _this.setState({\n            sensorIOPin: e.target.value\n          });\n        },\n        placeholder: \"Input Pin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        className: \"add-sensor-form__error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, _this.state.addSensorError), React.createElement(Button, {\n        className: \"add-sensor-form__button\",\n        onClick: _this.addSensor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, _this.state.addSensorLoading ? React.createElement(Spinner, {\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }) : 'Add Sensor'))), React.createElement(Popover, {\n        className: \"add-actuator-popover\",\n        isOpen: _this.state.addActuatorPopover,\n        trigger: \"legacy\",\n        target: \"actuator-add\",\n        toggle: function toggle(_) {\n          return _this.setState(function (prevState) {\n            return {\n              addActuatorPopover: !prevState.addActuatorPopover\n            };\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(PopoverBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      })));\n    };\n\n    return _this;\n  }\n\n  return Settings;\n}(Component);\n\nexport default Settings;","map":{"version":3,"sources":["/Users/Farhad/Desktop/socket/sensors-dashboard/src/Settings.js"],"names":["React","Component","Row","Col","InputGroup","Input","InputGroupAddon","PopoverBody","Popover","Button","Spinner","axios","FaPlus","Settings","state","sensors","showUrl","send_data","url","addSensorPopover","addActuatorPopover","addSensorLoading","addSensorError","sensorName","sensorXbeeId","sensorIOPin","componentDidMount","getSensors","get","then","res","console","log","JSON","parse","data","addSensor","setState","post","name","xbeeAddress","IOLine","catch","_","render","event","target","value","color","cursor","prevState","e"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Row,\n    Col,\n    InputGroup,\n    Input,\n    InputGroupAddon,\n    PopoverBody,\n    Popover,\n    Button,\n    Spinner\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport './Settings.css';\nimport { FaPlus } from \"react-icons/fa\";\n\n\nclass Settings extends Component {\n\n    state = {\n        sensors: [],\n        showUrl: false,\n        send_data: false,\n        url: '',\n        addSensorPopover: false,\n        addActuatorPopover: false,\n        addSensorLoading: false,\n        addSensorError: 'Could not add',\n        sensorName: '',\n        sensorXbeeId: '',\n        sensorIOPin: ''\n    }\n\n    componentDidMount = () => {\n        this.getSensors()\n    }\n\n    getSensors = () => {\n\n        axios.get('http://0.0.0.0:5000/sensors')\n            .then(\n                res => {\n                    console.log(JSON.parse(res.data.sensors))\n                }\n            )\n    }\n\n    addSensor = () => {\n        this.setState({ addSensorLoading: true, addSensorError: '' })\n        axios.post('http://0.0.0.0:5000/sensors', {\n            name: this.state.sensorName,\n            xbeeAddress: this.state.sensorXbeeId,\n            IOLine: this.state.sensorIOPin\n        })\n            .then(\n                res => {\n                    this.setState({ addSensorLoading: false })\n                    console.log(JSON.parse(res.data.sensors))\n                }\n            )\n            .catch(_ => {\n                this.setState({ addSensorLoading: false, addSensorError: 'Could not add the sensor' })\n                console.log(_)\n            })\n    }\n\n    render = () => {\n        return (\n            <div>\n                <Row className=\"container\">\n                    <h4 className=\"label\">Sensors: </h4>\n                    <div className=\"sensor\"></div>\n                    <div className=\"sensor sensor__add\" id=\"sensor-add\">\n                        <FaPlus />\n                    </div>\n                </Row>\n                <Row className=\"container\">\n                    <h4 className=\"label\">Actuators: </h4>\n                    <div className=\"actuator\"></div>\n                    <div className=\"actuator actuator__add\" id=\"actuator-add\">\n                        <FaPlus />\n                    </div>\n                </Row>\n\n                <Row className='mt-5 ml-5'>\n                    {this.state.showUrl ? (\n                        <InputGroup>\n                            <Input onChange={event => this.setState({ url: event.target.value })} value={this.state.url} placeholder=\"URL of destination\" />\n                            <InputGroupAddon addonType=\"append\">\n                                {/* <Button\n                                        onClick={_ => {\n                                            this.setState(prevState => ({ send_data: !prevState.send_data }),\n                                                _ => io.emit('url_info', { url: this.state.url, send_data: this.state.send_data })\n                                            )\n                                        }}\n                                        style={{ backgroundColor: this.state.send_data ? 'red' : 'green' }}>{this.state.send_data ? 'STOP' : 'SEND'}</Button> */}\n                            </InputGroupAddon>\n                        </InputGroup>\n                    ) : (\n                            <p onClick={_ => this.setState({ showUrl: true })} style={{ color: 'blue', cursor: 'pointer' }}>send data</p>\n                        )}\n                </Row>\n\n                <Popover placement=\"right-end\" className=\"add-sensor-popover\" isOpen={this.state.addSensorPopover} trigger='legacy' target=\"sensor-add\" toggle={_ => this.setState(prevState => ({ addSensorPopover: !prevState.addSensorPopover }))}>\n\n                    <PopoverBody className=\"add-sensor-form\">\n                        <h5>Add Sensor</h5>\n                        <InputGroup className=\"add-sensor-form__input\">\n                            <InputGroupAddon addonType=\"prepend\" >Name</InputGroupAddon>\n                            <Input value={this.state.sensorName} onChange={e => this.setState({ sensorName: e.target.value })} placeholder=\"Name\" />\n                        </InputGroup>\n                        <InputGroup className=\"add-sensor-form__input\">\n                            <InputGroupAddon addonType=\"prepend\" >Xbee Id</InputGroupAddon>\n                            <Input value={this.state.sensorXbeeId} onChange={e => this.setState({ sensorXbeeId: e.target.value })} placeholder=\"Xbee Id\" />\n                        </InputGroup>\n                        <InputGroup className=\"add-sensor-form__input\">\n                            <InputGroupAddon addonType=\"prepend\" >Input Pin</InputGroupAddon>\n                            <Input value={this.state.sensorIOPin} onChange={e => this.setState({ sensorIOPin: e.target.value })} placeholder=\"Input Pin\" />\n                        </InputGroup>\n                        <p className=\"add-sensor-form__error\">{this.state.addSensorError}</p>\n                        <Button\n                            className=\"add-sensor-form__button\"\n                            onClick={this.addSensor}\n                        >\n                            {this.state.addSensorLoading ? (<Spinner size=\"sm\" />) : ('Add Sensor')}\n                        </Button>\n\n                    </PopoverBody>\n\n                </Popover>\n\n                <Popover className=\"add-actuator-popover\" isOpen={this.state.addActuatorPopover} trigger='legacy' target=\"actuator-add\" toggle={_ => this.setState(prevState => ({ addActuatorPopover: !prevState.addActuatorPopover }))}>\n                    <PopoverBody>\n                    </PopoverBody>\n                </Popover>\n\n            </div>\n        )\n    }\n}\n\nexport default Settings"]},"metadata":{},"sourceType":"module"}