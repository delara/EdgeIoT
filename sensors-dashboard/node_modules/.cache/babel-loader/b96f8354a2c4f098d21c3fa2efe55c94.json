{"ast":null,"code":"import _defineProperty from \"/Users/Farhad/Desktop/socket/sensors-dashboard/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/Farhad/Desktop/socket/sensors-dashboard/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/Farhad/Desktop/socket/sensors-dashboard/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/Farhad/Desktop/socket/sensors-dashboard/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Farhad/Desktop/socket/sensors-dashboard/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Farhad/Desktop/socket/sensors-dashboard/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Farhad/Desktop/socket/sensors-dashboard/src/Settings.js\";\nimport React, { Component } from 'react';\nimport { Row, Col, InputGroup, Input, InputGroupAddon, PopoverBody, Popover, Button, Spinner, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from \"reactstrap\";\nimport axios from \"axios\";\nimport './Settings.css';\nimport { FaPlus } from \"react-icons/fa\";\nimport Switch from \"react-switch\";\nvar pins = [{\n  label: 'IOLine.DIO0_AD0',\n  value: 0\n}, {\n  label: 'IOLine.DIO1_AD1',\n  value: 1\n}, {\n  label: 'IOLine.DIO2_AD2',\n  value: 2\n}, {\n  label: 'IOLine.DIO3_AD3',\n  value: 3\n}, {\n  label: 'IOLine.DIO4_AD4',\n  value: 4\n}, {\n  label: 'IOLine.DIO5_AD5',\n  value: 5\n}, {\n  label: 'IOLine.DIO6',\n  value: 6\n}, {\n  label: 'IOLine.DIO7',\n  value: 7\n}, {\n  label: 'IOLine.DIO8',\n  value: 8\n}, {\n  label: 'IOLine.DIO9',\n  value: 9\n}, {\n  label: 'IOLine.DIO10_PM0',\n  value: 10\n}, {\n  label: 'IOLine.DIO11_PWM1',\n  value: 11\n}, {\n  label: 'IOLine.DIO12',\n  value: 12\n}, {\n  label: 'IOLine.DIO13',\n  value: 13\n}, {\n  label: 'IOLine.DIO14',\n  value: 14\n}, {\n  label: 'IOLine.DIO15',\n  value: 15\n}, {\n  label: 'IOLine.DIO16',\n  value: 16\n}, {\n  label: 'IOLine.DIO17',\n  value: 17\n}, {\n  label: 'IOLine.DIO18',\n  value: 18\n}, {\n  label: 'IOLine.DIO19',\n  value: 19\n}];\n\nvar Settings =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Settings, _Component);\n\n  function Settings() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Settings);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Settings)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      sensors: [],\n      actuators: [],\n      config: {\n        actuatorsConfig: {},\n        post: {}\n      },\n      tempConfig: {\n        actuatorsConfig: {},\n        post: {}\n      },\n      showUrl: false,\n      send_data: false,\n      url: '',\n      addSensorPopover: false,\n      addActuatorPopover: false,\n      addSensorLoading: false,\n      addSensorError: '',\n      addActuatorLoading: false,\n      addActuatorError: '',\n      sensorName: '',\n      sensorXbeeId: '',\n      sensorIOPin: '',\n      actuatorName: '',\n      actuatorAddress: '',\n      actuatorConfigPopover: false,\n      setActuatorConfigError: '',\n      setActuatorConfigLoading: false,\n      currentActuatorId: ''\n    };\n\n    _this.componentDidMount = function () {\n      _this.getSensors();\n\n      _this.getActuators();\n\n      _this.getConfig();\n    };\n\n    _this.getConfig = function () {\n      axios.get('http://0.0.0.0:5000/config').then(function (res) {\n        _this.setState({\n          config: JSON.parse(res.data.config),\n          tempConfig: JSON.parse(res.data.config)\n        });\n\n        console.log(res.data);\n      });\n    };\n\n    _this.getSensors = function () {\n      axios.get('http://0.0.0.0:5000/sensors').then(function (res) {\n        var sensors = [];\n\n        for (var sensorKey in JSON.parse(res.data.sensors)) {\n          sensors.push(JSON.parse(res.data.sensors)[sensorKey]);\n        }\n\n        _this.setState({\n          sensors: sensors\n        });\n\n        console.log(sensors);\n      });\n    };\n\n    _this.getActuators = function () {\n      axios.get('http://0.0.0.0:5000/actuators').then(function (res) {\n        var actuators = [];\n        console.log(res.data);\n\n        for (var actuatorKey in JSON.parse(res.data.actuators)) {\n          actuators.push(JSON.parse(res.data.actuators)[actuatorKey]);\n        }\n\n        _this.setState({\n          actuators: actuators\n        });\n\n        console.log(actuators);\n      });\n    };\n\n    _this.addSensor = function () {\n      _this.setState({\n        addSensorLoading: true,\n        addSensorError: ''\n      });\n\n      axios.post('http://0.0.0.0:5000/sensors', {\n        name: _this.state.sensorName,\n        xbeeAddress: _this.state.sensorXbeeId,\n        IOLine: _this.state.sensorIOPin\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(function (res) {\n        _this.setState({\n          addSensorLoading: false,\n          addSensorPopover: false\n        });\n\n        _this.getSensors();\n      }).catch(function (err) {\n        _this.setState({\n          addSensorLoading: false,\n          addSensorError: JSON.parse(JSON.stringify(err.response.data))\n        });\n      });\n    };\n\n    _this.addActuator = function () {\n      _this.setState({\n        addActuatorLoading: true,\n        addActuatorError: ''\n      });\n\n      axios.post('http://0.0.0.0:5000/actuators', {\n        name: _this.state.actuatorName,\n        plugAddress: _this.state.actuatorAddress\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(function (res) {\n        _this.setState({\n          addActuatorError: false,\n          addActuatorPopover: false\n        });\n\n        _this.getActuators();\n      }).catch(function (err) {\n        _this.setState({\n          addActuatorLoading: false,\n          addActuatorError: JSON.parse(JSON.stringify(err.response.data))\n        });\n      });\n    };\n\n    _this.updateConfig = function () {\n      console.log(_this.state.tempConfig);\n      axios.post('http://0.0.0.0:5000/config', _this.state.tempConfig, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(function (res) {\n        _this.setState(function (prevState) {\n          return {\n            config: prevState.tempConfig\n          };\n        });\n      }).catch(function (err) {\n        console.log(err);\n      });\n    };\n\n    _this.render = function () {\n      console.log(_this.state.tempConfig);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"Sensors: \"), _this.state.sensors.map(function (sensor) {\n        return React.createElement(\"div\", {\n          key: sensor.sensorId,\n          className: \"sensor\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          style: {\n            fontSize: 20,\n            marginBottom: 0\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }, sensor.name), React.createElement(\"p\", {\n          style: {\n            fontSize: 4\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }, sensor.sensorId), React.createElement(\"img\", {\n          style: {\n            width: 50,\n            height: 50\n          },\n          src: require('./sensor.png'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }));\n      }), React.createElement(\"div\", {\n        className: \"sensor sensor__add\",\n        id: \"sensor-add\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(FaPlus, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \"Actuators: \"), _this.state.actuators.map(function (actuator) {\n        return React.createElement(\"div\", {\n          key: actuator.actuatorId,\n          className: \"actuator\",\n          onClick: function onClick(_) {\n            _this.setState({\n              currentActuatorId: actuator.actuatorId,\n              actuatorConfigPopover: true\n            });\n          },\n          id: actuator.actuatorId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          style: {\n            fontSize: 20,\n            marginBottom: 0\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203\n          },\n          __self: this\n        }, actuator.name), React.createElement(\"p\", {\n          style: {\n            fontSize: 4\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        }, actuator.actuatorId), React.createElement(\"img\", {\n          style: {\n            width: 30,\n            height: 30,\n            marginTop: 10\n          },\n          src: require('./actuator.png'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205\n          },\n          __self: this\n        }));\n      }), React.createElement(\"div\", {\n        className: \"actuator actuator__add\",\n        id: \"actuator-add\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(FaPlus, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        className: \"mt-5 ml-5 mr-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, _this.state.showUrl ? React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(Input, {\n        onChange: function onChange(event) {\n          if (_this.state.send_data) {\n            _this.setState({\n              send_data: false\n            });\n          }\n\n          _this.setState({\n            url: event.target.value\n          });\n        },\n        value: _this.state.url,\n        placeholder: \"URL of destination\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }), React.createElement(InputGroupAddon, {\n        addonType: \"append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: function onClick(_) {\n          if (!_this.state.send_data) {\n            _this.setState(function (prevState) {\n              return _objectSpread({}, prevState, {\n                tempConfig: _objectSpread({}, prevState.tempConfig)\n              });\n            });\n          }\n        },\n        style: {\n          backgroundColor: _this.state.send_data ? 'red' : 'green'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, _this.state.send_data ? 'STOP' : 'SEND'))) : React.createElement(\"p\", {\n        onClick: function onClick(_) {\n          return _this.setState({\n            showUrl: true\n          });\n        },\n        style: {\n          color: 'blue',\n          cursor: 'pointer'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \"send data\")), React.createElement(Popover, {\n        placement: \"right-end\",\n        className: \"add-sensor-popover\",\n        isOpen: _this.state.addSensorPopover,\n        trigger: \"legacy\",\n        target: \"sensor-add\",\n        toggle: function toggle(_) {\n          return _this.setState(function (prevState) {\n            return {\n              addSensorPopover: !prevState.addSensorPopover\n            };\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(PopoverBody, {\n        className: \"add-sensor-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, \"Add Sensor\"), React.createElement(InputGroup, {\n        className: \"add-sensor-form__input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, \"Name\"), React.createElement(Input, {\n        value: _this.state.sensorName,\n        onChange: function onChange(e) {\n          return _this.setState({\n            sensorName: e.target.value\n          });\n        },\n        placeholder: \"Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      })), React.createElement(InputGroup, {\n        className: \"add-sensor-form__input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, \"Xbee Id\"), React.createElement(Input, {\n        value: _this.state.sensorXbeeId,\n        onChange: function onChange(e) {\n          return _this.setState({\n            sensorXbeeId: e.target.value\n          });\n        },\n        placeholder: \"Xbee Id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      })), React.createElement(InputGroup, {\n        className: \"add-sensor-form__input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, \"Input Pin\"), React.createElement(UncontrolledDropdown, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, React.createElement(DropdownToggle, {\n        caret: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, pins.find(function (p) {\n        return p.value === _this.state.sensorIOPin;\n      }) && pins.find(function (p) {\n        return p.value === _this.state.sensorIOPin;\n      })['label'] || 'Select an input pin'), React.createElement(DropdownMenu, {\n        modifiers: {\n          setMaxHeight: {\n            enabled: true,\n            order: 890,\n            fn: function fn(data) {\n              return _objectSpread({}, data, {\n                styles: _objectSpread({}, data.styles, {\n                  overflow: 'auto',\n                  maxHeight: 300\n                })\n              });\n            }\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, React.createElement(DropdownItem, {\n        header: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, \"Header\"), pins.map(function (pin) {\n        return React.createElement(DropdownItem, {\n          onClick: function onClick(_) {\n            return _this.setState({\n              sensorIOPin: pin.value\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 264\n          },\n          __self: this\n        }, pin.label);\n      })))), React.createElement(\"p\", {\n        className: \"add-sensor-form__error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, _this.state.addSensorError), React.createElement(Button, {\n        className: \"add-sensor-form__button\",\n        onClick: _this.addSensor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, _this.state.addSensorLoading ? React.createElement(Spinner, {\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }) : 'Add Sensor'))), React.createElement(Popover, {\n        className: \"add-actuator-popover\",\n        isOpen: _this.state.addActuatorPopover,\n        trigger: \"legacy\",\n        target: \"actuator-add\",\n        toggle: function toggle(_) {\n          return _this.setState(function (prevState) {\n            return {\n              addActuatorPopover: !prevState.addActuatorPopover\n            };\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, React.createElement(PopoverBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, \"Add Actuator\"), React.createElement(InputGroup, {\n        className: \"add-actuator-form__input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, \"Name\"), React.createElement(Input, {\n        value: _this.state.actuatorName,\n        onChange: function onChange(e) {\n          return _this.setState({\n            actuatorName: e.target.value\n          });\n        },\n        placeholder: \"Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      })), React.createElement(InputGroup, {\n        className: \"add-actuator-form__input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, \"Plug Address\"), React.createElement(Input, {\n        value: _this.state.actuatorAddress,\n        onChange: function onChange(e) {\n          return _this.setState({\n            actuatorAddress: e.target.value\n          });\n        },\n        placeholder: \"Xbee Id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        className: \"add-actuator-form__error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, _this.state.addActuatorError), React.createElement(Button, {\n        className: \"add-actuator-form__button\",\n        onClick: _this.addActuator,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, _this.state.addActuatorLoading ? React.createElement(Spinner, {\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }) : 'Add Actuator'))), React.createElement(Popover, {\n        className: \"add-actuator-popover\",\n        isOpen: _this.state.actuatorConfigPopover,\n        trigger: \"legacy\",\n        target: function target(_) {\n          return window.document.getElementById(_this.state.currentActuatorId);\n        },\n        toggle: function toggle(_) {\n          return _this.setState(function (prevState) {\n            return {\n              actuatorConfigPopover: !prevState.actuatorConfigPopover\n            };\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, React.createElement(PopoverBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, \"Actuator\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, \"AUTO\", React.createElement(Switch, {\n        onChange: function onChange(value) {\n          var newActuatorconfig = _this.state.tempConfig.actuatorsConfig[_this.state.currentActuatorId] ? _objectSpread({}, _this.state.tempConfig.actuatorsConfig[_this.state.currentActuatorId], {\n            isAuto: value\n          }) : {\n            isAuto: value\n          };\n          console.log(newActuatorconfig);\n\n          _this.setState(function (prevState) {\n            return _objectSpread({}, prevState, {\n              tempConfig: _objectSpread({}, prevState.tempConfig, {\n                actuatorsConfig: _objectSpread({}, prevState.tempConfig.actuatorsConfig, _defineProperty({}, prevState.currentActuatorId, newActuatorconfig))\n              })\n            });\n          });\n        },\n        checked: _this.state.tempConfig.actuatorsConfig && _this.state.tempConfig.actuatorsConfig[_this.state.currentActuatorId] && _this.state.tempConfig.actuatorsConfig[_this.state.currentActuatorId].isAuto || false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      })), React.createElement(InputGroup, {\n        className: \"add-actuator-form__input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, \"Sensor Id\"), React.createElement(UncontrolledDropdown, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, React.createElement(DropdownToggle, {\n        disabled: _this.state.tempConfig.actuatorsConfig && _this.state.tempConfig.actuatorsConfig[_this.state.currentActuatorId] ? !_this.state.tempConfig.actuatorsConfig[_this.state.currentActuatorId].isAuto : true,\n        caret: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, _this.state.tempConfig.actuatorsConfig && _this.state.tempConfig.actuatorsConfig[_this.state.currentActuatorId] ? _this.state.sensors.find(function (s) {\n        return s.sensorId == _this.state.tempConfig.actuatorsConfig[_this.state.currentActuatorId].sensorId;\n      })['name'] : 'Select Sensor'), React.createElement(DropdownMenu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, React.createElement(DropdownItem, {\n        header: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }, \"Select Sensor\"), _this.state.sensors.map(function (sensor) {\n        return React.createElement(DropdownItem, {\n          onClick: function onClick(_) {\n            if (_this.state.tempConfig.actuatorsConfig && _this.state.tempConfig.actuatorsConfig[_this.state.currentActuatorId]) {\n              _this.setState(function (prevState) {\n                return _objectSpread({}, prevState, {\n                  tempConfig: _objectSpread({}, prevState.tempConfig, {\n                    actuatorsConfig: _objectSpread({}, prevState.tempConfig.actuatorsConfig, _defineProperty({}, _this.state.currentActuatorId, _objectSpread({}, prevState.tempConfig.actuatorsConfig[prevState.currentActuatorId], {\n                      sensorId: sensor.sensorId\n                    })))\n                  })\n                });\n              });\n            } else {\n              _this.setState(function (prevState) {\n                return _objectSpread({}, prevState, {\n                  tempConfig: _objectSpread({}, prevState.tempConfig, {\n                    actuatorsConfig: _objectSpread({}, prevState.tempConfig.actuatorsConfig, _defineProperty({}, prevState.currentActuatorId, {\n                      sensorId: sensor.sensorId\n                    }))\n                  })\n                });\n              });\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 325\n          },\n          __self: this\n        }, sensor.name);\n      })))), React.createElement(InputGroup, {\n        className: \"add-actuator-form__input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, \"Relation\"), React.createElement(UncontrolledDropdown, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, React.createElement(DropdownToggle, {\n        disabled: _this.state.tempConfig.actuatorsConfig && _this.state.tempConfig.actuatorsConfig[_this.state.currentActuatorId] ? !_this.state.tempConfig.actuatorsConfig[_this.state.currentActuatorId].isAuto : true,\n        caret: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, _this.state.tempConfig.actuatorsConfig && _this.state.tempConfig.actuatorsConfig[_this.state.currentActuatorId] ? _this.state.tempConfig.actuatorsConfig[_this.state.currentActuatorId].type : 'Select Relation'), React.createElement(DropdownMenu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, React.createElement(DropdownItem, {\n        header: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, \"Select Relation\"), React.createElement(DropdownItem, {\n        onClick: function onClick(_) {\n          if (_this.state.tempConfig.actuatorsConfig && _this.state.tempConfig.actuatorsConfig[_this.state.currentActuatorId]) {\n            _this.setState(function (prevState) {\n              return _objectSpread({}, prevState, {\n                tempConfig: _objectSpread({}, prevState.tempConfig, {\n                  actuatorsConfig: _objectSpread({}, prevState.tempConfig.actuatorsConfig, _defineProperty({}, _this.state.currentActuatorId, _objectSpread({}, prevState.tempConfig.actuatorsConfig[prevState.currentActuatorId], {\n                    type: '>'\n                  })))\n                })\n              });\n            });\n          } else {\n            _this.setState(function (prevState) {\n              return _objectSpread({}, prevState, {\n                tempConfig: _objectSpread({}, prevState.tempConfig, {\n                  actuatorsConfig: _objectSpread({}, prevState.tempConfig.actuatorsConfig, _defineProperty({}, prevState.currentActuatorId, {\n                    type: '>'\n                  }))\n                })\n              });\n            });\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, \"higher than\"), React.createElement(DropdownItem, {\n        onClick: function onClick(_) {\n          if (_this.state.tempConfig.actuatorsConfig && _this.state.tempConfig.actuatorsConfig[_this.state.currentActuatorId]) {\n            _this.setState(function (prevState) {\n              return _objectSpread({}, prevState, {\n                tempConfig: _objectSpread({}, prevState.tempConfig, {\n                  actuatorsConfig: _objectSpread({}, prevState.tempConfig.actuatorsConfig, _defineProperty({}, _this.state.currentActuatorId, _objectSpread({}, prevState.tempConfig.actuatorsConfig[prevState.currentActuatorId], {\n                    type: '<'\n                  })))\n                })\n              });\n            });\n          } else {\n            _this.setState(function (prevState) {\n              return _objectSpread({}, prevState, {\n                tempConfig: _objectSpread({}, prevState.tempConfig, {\n                  actuatorsConfig: _objectSpread({}, prevState.tempConfig.actuatorsConfig, _defineProperty({}, prevState.currentActuatorId, {\n                    type: '<'\n                  }))\n                })\n              });\n            });\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }, \"Lowen than\")))), React.createElement(InputGroup, {\n        className: \"add-actuator-form__input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }, \"Threshold\"), React.createElement(Input, {\n        value: _this.state.tempConfig.actuatorsConfig && _this.state.tempConfig.actuatorsConfig[_this.state.currentActuatorId] ? _this.state.tempConfig.actuatorsConfig[_this.state.currentActuatorId].threshold : '',\n        onChange: function onChange(e) {\n          e.persist();\n\n          if (_this.state.tempConfig.actuatorsConfig && _this.state.tempConfig.actuatorsConfig[_this.state.currentActuatorId]) {\n            _this.setState(function (prevState) {\n              return _objectSpread({}, prevState, {\n                tempConfig: _objectSpread({}, prevState.tempConfig, {\n                  actuatorsConfig: _objectSpread({}, prevState.tempConfig.actuatorsConfig, _defineProperty({}, _this.state.currentActuatorId, _objectSpread({}, prevState.tempConfig.actuatorsConfig[prevState.currentActuatorId], {\n                    threshold: e.target.value\n                  })))\n                })\n              });\n            });\n          } else {\n            _this.setState(function (prevState) {\n              return _objectSpread({}, prevState, {\n                tempConfig: _objectSpread({}, prevState.tempConfig, {\n                  actuatorsConfig: _objectSpread({}, prevState.tempConfig.actuatorsConfig, _defineProperty({}, prevState.currentActuatorId, {\n                    threshold: e.target.value\n                  }))\n                })\n              });\n            });\n          }\n        },\n        disabled: _this.state.tempConfig.actuatorsConfig && _this.state.tempConfig.actuatorsConfig[_this.state.currentActuatorId] ? !_this.state.tempConfig.actuatorsConfig[_this.state.currentActuatorId].isAuto : true,\n        placeholder: \"Threshold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        className: \"add-actuator-form__error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }, _this.state.setActuatorConfigError), React.createElement(Button, {\n        className: \"add-actuator-form__button\",\n        onClick: _this.updateConfig,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }, _this.state.setActuatorConfigLoading ? React.createElement(Spinner, {\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      }) : 'Done'))));\n    };\n\n    return _this;\n  }\n\n  return Settings;\n}(Component);\n\nexport default Settings;","map":{"version":3,"sources":["/Users/Farhad/Desktop/socket/sensors-dashboard/src/Settings.js"],"names":["React","Component","Row","Col","InputGroup","Input","InputGroupAddon","PopoverBody","Popover","Button","Spinner","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","axios","FaPlus","Switch","pins","label","value","Settings","state","sensors","actuators","config","actuatorsConfig","post","tempConfig","showUrl","send_data","url","addSensorPopover","addActuatorPopover","addSensorLoading","addSensorError","addActuatorLoading","addActuatorError","sensorName","sensorXbeeId","sensorIOPin","actuatorName","actuatorAddress","actuatorConfigPopover","setActuatorConfigError","setActuatorConfigLoading","currentActuatorId","componentDidMount","getSensors","getActuators","getConfig","get","then","res","setState","JSON","parse","data","console","log","sensorKey","push","actuatorKey","addSensor","name","xbeeAddress","IOLine","headers","catch","err","stringify","response","addActuator","plugAddress","updateConfig","prevState","render","map","sensor","sensorId","fontSize","marginBottom","width","height","require","actuator","actuatorId","_","marginTop","event","target","backgroundColor","color","cursor","e","find","p","setMaxHeight","enabled","order","fn","styles","overflow","maxHeight","pin","window","document","getElementById","newActuatorconfig","isAuto","s","type","threshold","persist"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Row,\n    Col,\n    InputGroup,\n    Input,\n    InputGroupAddon,\n    PopoverBody,\n    Popover,\n    Button,\n    Spinner,\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport './Settings.css';\nimport { FaPlus } from \"react-icons/fa\";\nimport Switch from \"react-switch\";\n\n\n\nconst pins = [\n\n    { label: 'IOLine.DIO0_AD0', value: 0 },\n    { label: 'IOLine.DIO1_AD1', value: 1 },\n    { label: 'IOLine.DIO2_AD2', value: 2 },\n    { label: 'IOLine.DIO3_AD3', value: 3 },\n    { label: 'IOLine.DIO4_AD4', value: 4 },\n    { label: 'IOLine.DIO5_AD5', value: 5 },\n    { label: 'IOLine.DIO6', value: 6 },\n    { label: 'IOLine.DIO7', value: 7 },\n    { label: 'IOLine.DIO8', value: 8 },\n    { label: 'IOLine.DIO9', value: 9 },\n    { label: 'IOLine.DIO10_PM0', value: 10 },\n    { label: 'IOLine.DIO11_PWM1', value: 11 },\n    { label: 'IOLine.DIO12', value: 12 },\n    { label: 'IOLine.DIO13', value: 13 },\n    { label: 'IOLine.DIO14', value: 14 },\n    { label: 'IOLine.DIO15', value: 15 },\n    { label: 'IOLine.DIO16', value: 16 },\n    { label: 'IOLine.DIO17', value: 17 },\n    { label: 'IOLine.DIO18', value: 18 },\n    { label: 'IOLine.DIO19', value: 19 },\n\n]\n\n\nclass Settings extends Component {\n\n    state = {\n        sensors: [],\n        actuators: [],\n        config: {\n            actuatorsConfig: {},\n            post:{}\n        },\n        tempConfig: {\n            actuatorsConfig: {},\n            post:{}\n        },\n        showUrl: false,\n        send_data: false,\n        url: '',\n        addSensorPopover: false,\n        addActuatorPopover: false,\n        addSensorLoading: false,\n        addSensorError: '',\n        addActuatorLoading: false,\n        addActuatorError: '',\n        sensorName: '',\n        sensorXbeeId: '',\n        sensorIOPin: '',\n        actuatorName: '',\n        actuatorAddress: '',\n        actuatorConfigPopover: false,\n        setActuatorConfigError: '',\n        setActuatorConfigLoading: false,\n        currentActuatorId: ''\n    }\n\n    componentDidMount = () => {\n        this.getSensors()\n        this.getActuators()\n        this.getConfig()\n    }\n\n    getConfig = () => {\n\n        axios.get('http://0.0.0.0:5000/config')\n            .then(\n                res => {\n\n                    this.setState({ config: JSON.parse(res.data.config), tempConfig: JSON.parse(res.data.config) })\n                    console.log(res.data)\n                }\n            )\n    }\n\n    getSensors = () => {\n\n        axios.get('http://0.0.0.0:5000/sensors')\n            .then(\n                res => {\n                    var sensors = []\n                    for (var sensorKey in JSON.parse(res.data.sensors)) {\n                        sensors.push(JSON.parse(res.data.sensors)[sensorKey])\n                    }\n                    this.setState({ sensors })\n                    console.log(sensors)\n                }\n            )\n    }\n\n    getActuators = () => {\n\n        axios.get('http://0.0.0.0:5000/actuators')\n            .then(\n                res => {\n                    var actuators = []\n                    console.log(res.data)\n                    for (var actuatorKey in JSON.parse(res.data.actuators)) {\n                        actuators.push(JSON.parse(res.data.actuators)[actuatorKey])\n                    }\n                    this.setState({ actuators })\n                    console.log(actuators)\n                }\n            )\n    }\n\n    addSensor = () => {\n        this.setState({ addSensorLoading: true, addSensorError: '' })\n        axios.post('http://0.0.0.0:5000/sensors', {\n            name: this.state.sensorName,\n            xbeeAddress: this.state.sensorXbeeId,\n            IOLine: this.state.sensorIOPin\n        }, { headers: { 'Content-Type': 'application/json' } })\n            .then(\n                res => {\n                    this.setState({ addSensorLoading: false, addSensorPopover: false })\n                    this.getSensors()\n                }\n            )\n            .catch(err => {\n                this.setState({ addSensorLoading: false, addSensorError: JSON.parse(JSON.stringify(err.response.data)) })\n            })\n    }\n\n    addActuator = () => {\n        this.setState({ addActuatorLoading: true, addActuatorError: '' })\n        axios.post('http://0.0.0.0:5000/actuators', {\n            name: this.state.actuatorName,\n            plugAddress: this.state.actuatorAddress\n        }, { headers: { 'Content-Type': 'application/json' } })\n            .then(\n                res => {\n                    this.setState({ addActuatorError: false, addActuatorPopover: false })\n                    this.getActuators()\n                }\n            )\n            .catch(err => {\n                this.setState({ addActuatorLoading: false, addActuatorError: JSON.parse(JSON.stringify(err.response.data)) })\n            })\n    }\n\n    updateConfig = () => {\n        console.log(this.state.tempConfig)\n        axios.post('http://0.0.0.0:5000/config', this.state.tempConfig, { headers: { 'Content-Type': 'application/json' } })\n            .then(\n                res => {\n                    this.setState(prevState => ({ config: prevState.tempConfig }))\n                }\n            )\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    render = () => {\n        console.log(this.state.tempConfig)\n        return (\n            <div>\n                <Row className=\"container\">\n                    <h4 className=\"label\">Sensors: </h4>\n                    {this.state.sensors.map(sensor => (\n                        <div key={sensor.sensorId} className=\"sensor\">\n                            <p style={{ fontSize: 20, marginBottom: 0 }}>{sensor.name}</p>\n                            <p style={{ fontSize: 4 }}>{sensor.sensorId}</p>\n                            <img style={{ width: 50, height: 50 }} src={require('./sensor.png')} />\n                        </div>\n                    ))}\n                    <div className=\"sensor sensor__add\" id=\"sensor-add\">\n                        <FaPlus />\n                    </div>\n                </Row>\n                <Row className=\"container\">\n                    <h4 className=\"label\">Actuators: </h4>\n                    {this.state.actuators.map(actuator => (\n                        <div key={actuator.actuatorId} className=\"actuator\" onClick={_ => {\n                            this.setState({ currentActuatorId: actuator.actuatorId, actuatorConfigPopover: true })\n                        }} id={actuator.actuatorId}>\n                            <p style={{ fontSize: 20, marginBottom: 0 }}>{actuator.name}</p>\n                            <p style={{ fontSize: 4 }}>{actuator.actuatorId}</p>\n                            <img style={{ width: 30, height: 30, marginTop: 10 }} src={require('./actuator.png')} />\n                        </div>\n                    ))}\n                    <div className=\"actuator actuator__add\" id=\"actuator-add\">\n                        <FaPlus />\n                    </div>\n                </Row>\n\n                <Row className='mt-5 ml-5 mr-5'>\n                    {this.state.showUrl ? (\n                        <InputGroup>\n                            <Input onChange={event => {\n                                if (this.state.send_data) {\n                                    this.setState({ send_data: false })\n                                }\n                                this.setState({ url: event.target.value })\n                            }} value={this.state.url} placeholder=\"URL of destination\" />\n                            <InputGroupAddon addonType=\"append\">\n                                <Button\n                                    onClick={_ => {\n                                        if (!this.state.send_data) {\n                                            this.setState(prevState => ({...prevState, tempConfig: {...prevState.tempConfig, } }))\n                                        }\n                                    }}\n                                    style={{ backgroundColor: this.state.send_data ? 'red' : 'green' }}>{this.state.send_data ? 'STOP' : 'SEND'}</Button>\n                            </InputGroupAddon>\n                        </InputGroup>\n                    ) : (\n                            <p onClick={_ => this.setState({ showUrl: true })} style={{ color: 'blue', cursor: 'pointer' }}>send data</p>\n                        )}\n                </Row>\n\n                <Popover placement=\"right-end\" className=\"add-sensor-popover\" isOpen={this.state.addSensorPopover} trigger='legacy' target=\"sensor-add\" toggle={_ => this.setState(prevState => ({ addSensorPopover: !prevState.addSensorPopover }))}>\n\n                    <PopoverBody className=\"add-sensor-form\">\n                        <h5>Add Sensor</h5>\n                        <InputGroup className=\"add-sensor-form__input\">\n                            <InputGroupAddon addonType=\"prepend\" >Name</InputGroupAddon>\n                            <Input value={this.state.sensorName} onChange={e => this.setState({ sensorName: e.target.value })} placeholder=\"Name\" />\n                        </InputGroup>\n                        <InputGroup className=\"add-sensor-form__input\">\n                            <InputGroupAddon addonType=\"prepend\" >Xbee Id</InputGroupAddon>\n                            <Input value={this.state.sensorXbeeId} onChange={e => this.setState({ sensorXbeeId: e.target.value })} placeholder=\"Xbee Id\" />\n                        </InputGroup>\n                        <InputGroup className=\"add-sensor-form__input\">\n                            <InputGroupAddon addonType=\"prepend\" >Input Pin</InputGroupAddon>\n                            <UncontrolledDropdown>\n                                <DropdownToggle caret>\n                                    {pins.find(p => p.value === this.state.sensorIOPin) && pins.find(p => p.value === this.state.sensorIOPin)['label'] || 'Select an input pin'}\n                                </DropdownToggle>\n                                <DropdownMenu modifiers={{\n                                    setMaxHeight: {\n                                        enabled: true,\n                                        order: 890,\n                                        fn: (data) => ({ ...data, styles: { ...data.styles, overflow: 'auto', maxHeight: 300, }, }),\n                                    },\n                                }}>\n                                    <DropdownItem header>Header</DropdownItem>\n                                    {pins.map(pin => (\n                                        <DropdownItem onClick={_ => this.setState({ sensorIOPin: pin.value })} >{pin.label}</DropdownItem>\n                                    ))}\n                                </DropdownMenu>\n                            </UncontrolledDropdown>\n                            {/* <Input value={this.state.sensorIOPin} onChange={e => this.setState({ sensorIOPin: e.target.value })} placeholder=\"Input Pin\" /> */}\n                        </InputGroup>\n                        <p className=\"add-sensor-form__error\">{this.state.addSensorError}</p>\n                        <Button\n                            className=\"add-sensor-form__button\"\n                            onClick={this.addSensor}\n                        >\n                            {this.state.addSensorLoading ? (<Spinner size=\"sm\" />) : ('Add Sensor')}\n                        </Button>\n\n                    </PopoverBody>\n\n                </Popover>\n\n                <Popover className=\"add-actuator-popover\" isOpen={this.state.addActuatorPopover} trigger='legacy' target=\"actuator-add\" toggle={_ => this.setState(prevState => ({ addActuatorPopover: !prevState.addActuatorPopover }))}>\n                    <PopoverBody>\n                        <h5>Add Actuator</h5>\n                        <InputGroup className=\"add-actuator-form__input\">\n                            <InputGroupAddon addonType=\"prepend\" >Name</InputGroupAddon>\n                            <Input value={this.state.actuatorName} onChange={e => this.setState({ actuatorName: e.target.value })} placeholder=\"Name\" />\n                        </InputGroup>\n                        <InputGroup className=\"add-actuator-form__input\">\n                            <InputGroupAddon addonType=\"prepend\" >Plug Address</InputGroupAddon>\n                            <Input value={this.state.actuatorAddress} onChange={e => this.setState({ actuatorAddress: e.target.value })} placeholder=\"Xbee Id\" />\n                        </InputGroup>\n                        <p className=\"add-actuator-form__error\">{this.state.addActuatorError}</p>\n                        <Button\n                            className=\"add-actuator-form__button\"\n                            onClick={this.addActuator}>\n                            {this.state.addActuatorLoading ? (<Spinner size=\"sm\" />) : ('Add Actuator')}\n                        </Button>\n                    </PopoverBody>\n                </Popover>\n\n                <Popover className=\"add-actuator-popover\" isOpen={this.state.actuatorConfigPopover} trigger='legacy' target={_ => window.document.getElementById(this.state.currentActuatorId)} toggle={_ => this.setState(prevState => ({ actuatorConfigPopover: !prevState.actuatorConfigPopover }))}>\n                    <PopoverBody>\n                        <h5>Actuator</h5>\n                        <span>\n                            AUTO\n                                <Switch\n                                onChange={value => {\n                                    const newActuatorconfig = (this.state.tempConfig.actuatorsConfig[this.state.currentActuatorId]) ? { ...this.state.tempConfig.actuatorsConfig[this.state.currentActuatorId], isAuto: value } : { isAuto: value }\n                                    console.log(newActuatorconfig)\n                                    this.setState(prevState => ({ ...prevState, tempConfig: { ...prevState.tempConfig, actuatorsConfig: { ...prevState.tempConfig.actuatorsConfig, [prevState.currentActuatorId]: newActuatorconfig } } }))\n                                }} checked={(this.state.tempConfig.actuatorsConfig && this.state.tempConfig.actuatorsConfig[this.state.currentActuatorId] && this.state.tempConfig.actuatorsConfig[this.state.currentActuatorId].isAuto) || false} />\n\n                        </span>\n                        <InputGroup className=\"add-actuator-form__input\">\n                            <InputGroupAddon addonType=\"prepend\" >Sensor Id</InputGroupAddon>\n\n                            <UncontrolledDropdown>\n                                <DropdownToggle disabled={(this.state.tempConfig.actuatorsConfig && this.state.tempConfig.actuatorsConfig[this.state.currentActuatorId]) ? !this.state.tempConfig.actuatorsConfig[this.state.currentActuatorId].isAuto : true} caret>\n                                    {(this.state.tempConfig.actuatorsConfig && this.state.tempConfig.actuatorsConfig[this.state.currentActuatorId]) ? this.state.sensors.find(s => s.sensorId == this.state.tempConfig.actuatorsConfig[this.state.currentActuatorId].sensorId)['name'] : 'Select Sensor'}\n                                </DropdownToggle>\n                                <DropdownMenu>\n                                    <DropdownItem header>Select Sensor</DropdownItem>\n                                    {this.state.sensors.map(sensor => (\n                                        <DropdownItem onClick={_ => {\n                                            if (this.state.tempConfig.actuatorsConfig && this.state.tempConfig.actuatorsConfig[this.state.currentActuatorId]) {\n                                                this.setState(prevState => ({ ...prevState, tempConfig: { ...prevState.tempConfig, actuatorsConfig: { ...prevState.tempConfig.actuatorsConfig, [this.state.currentActuatorId]: { ...prevState.tempConfig.actuatorsConfig[prevState.currentActuatorId], sensorId: sensor.sensorId } } } }))\n                                            } else {\n                                                this.setState(prevState => ({ ...prevState, tempConfig: { ...prevState.tempConfig, actuatorsConfig: { ...prevState.tempConfig.actuatorsConfig, [prevState.currentActuatorId]: { sensorId: sensor.sensorId } } } }))\n                                            }\n                                        }}>{sensor.name}</DropdownItem>\n                                    ))}\n                                </DropdownMenu>\n                            </UncontrolledDropdown>\n                        </InputGroup>\n                        <InputGroup className=\"add-actuator-form__input\">\n                            <InputGroupAddon addonType=\"prepend\" >Relation</InputGroupAddon>\n\n                            <UncontrolledDropdown>\n                                <DropdownToggle disabled={(this.state.tempConfig.actuatorsConfig && this.state.tempConfig.actuatorsConfig[this.state.currentActuatorId]) ? !this.state.tempConfig.actuatorsConfig[this.state.currentActuatorId].isAuto : true} caret>\n                                    {(this.state.tempConfig.actuatorsConfig && this.state.tempConfig.actuatorsConfig[this.state.currentActuatorId]) ? this.state.tempConfig.actuatorsConfig[this.state.currentActuatorId].type : 'Select Relation'}\n                                </DropdownToggle>\n                                <DropdownMenu>\n                                    <DropdownItem header>Select Relation</DropdownItem>\n                                    <DropdownItem\n                                        onClick={_ => {\n                                            if (this.state.tempConfig.actuatorsConfig && this.state.tempConfig.actuatorsConfig[this.state.currentActuatorId]) {\n                                                this.setState(prevState => ({ ...prevState, tempConfig: { ...prevState.tempConfig, actuatorsConfig: { ...prevState.tempConfig.actuatorsConfig, [this.state.currentActuatorId]: { ...prevState.tempConfig.actuatorsConfig[prevState.currentActuatorId], type: '>' } } } }))\n                                            } else {\n                                                this.setState(prevState => ({ ...prevState, tempConfig: { ...prevState.tempConfig, actuatorsConfig: { ...prevState.tempConfig.actuatorsConfig, [prevState.currentActuatorId]: { type: '>' } } } }))\n                                            }\n                                        }} >higher than</DropdownItem>\n                                    <DropdownItem\n                                        onClick={_ => {\n                                            if (this.state.tempConfig.actuatorsConfig && this.state.tempConfig.actuatorsConfig[this.state.currentActuatorId]) {\n                                                this.setState(prevState => ({ ...prevState, tempConfig: { ...prevState.tempConfig, actuatorsConfig: { ...prevState.tempConfig.actuatorsConfig, [this.state.currentActuatorId]: { ...prevState.tempConfig.actuatorsConfig[prevState.currentActuatorId], type: '<' } } } }))\n                                            } else {\n                                                this.setState(prevState => ({ ...prevState, tempConfig: { ...prevState.tempConfig, actuatorsConfig: { ...prevState.tempConfig.actuatorsConfig, [prevState.currentActuatorId]: { type: '<' } } } }))\n                                            }\n                                        }}>\n                                        Lowen than</DropdownItem>\n                                </DropdownMenu>\n                            </UncontrolledDropdown>\n                        </InputGroup>\n                        <InputGroup className=\"add-actuator-form__input\">\n                            <InputGroupAddon addonType=\"prepend\" >Threshold</InputGroupAddon>\n                            <Input\n                                value={(this.state.tempConfig.actuatorsConfig && this.state.tempConfig.actuatorsConfig[this.state.currentActuatorId]) ? this.state.tempConfig.actuatorsConfig[this.state.currentActuatorId].threshold : ''}\n                                onChange={e => {\n                                    e.persist()\n                                    if (this.state.tempConfig.actuatorsConfig && this.state.tempConfig.actuatorsConfig[this.state.currentActuatorId]) {\n                                        this.setState(prevState => ({ ...prevState, tempConfig: { ...prevState.tempConfig, actuatorsConfig: { ...prevState.tempConfig.actuatorsConfig, [this.state.currentActuatorId]: { ...prevState.tempConfig.actuatorsConfig[prevState.currentActuatorId], threshold: e.target.value } } } }))\n                                    } else {\n                                        this.setState(prevState => ({ ...prevState, tempConfig: { ...prevState.tempConfig, actuatorsConfig: { ...prevState.tempConfig.actuatorsConfig, [prevState.currentActuatorId]: { threshold: e.target.value } } } }))\n                                    }\n                                }}\n                                disabled={(this.state.tempConfig.actuatorsConfig && this.state.tempConfig.actuatorsConfig[this.state.currentActuatorId]) ? !this.state.tempConfig.actuatorsConfig[this.state.currentActuatorId].isAuto : true}\n                                placeholder=\"Threshold\" />\n                        </InputGroup>\n                        <p className=\"add-actuator-form__error\">{this.state.setActuatorConfigError}</p>\n                        <Button\n                            className=\"add-actuator-form__button\"\n                            onClick={this.updateConfig}>\n                            {this.state.setActuatorConfigLoading ? (<Spinner size=\"sm\" />) : ('Done')}\n                        </Button>\n                    </PopoverBody>\n                </Popover>\n\n            </div>\n        )\n    }\n}\n\nexport default Settings"]},"metadata":{},"sourceType":"module"}