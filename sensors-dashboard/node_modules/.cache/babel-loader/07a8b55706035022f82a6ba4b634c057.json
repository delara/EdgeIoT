{"ast":null,"code":"import _classCallCheck from \"/Users/Farhad/Desktop/socket/sensors-dashboard/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/Farhad/Desktop/socket/sensors-dashboard/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Farhad/Desktop/socket/sensors-dashboard/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Farhad/Desktop/socket/sensors-dashboard/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Farhad/Desktop/socket/sensors-dashboard/src/Dashboard.js\";\nimport React, { Component } from 'react';\nimport { Progress, Container, Row, Input, InputGroup, InputGroupAddon, Button } from \"reactstrap\";\nimport axios from 'axios';\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Dashboard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      sensors: [],\n      sensorData: {},\n      showUrl: false,\n      send_data: false,\n      url: ''\n    };\n\n    _this.componentDidMount = function () {\n      _this.getSensors();\n\n      setInterval(function (_) {\n        io.emit('sensors_data');\n        i++;\n      }, 10000);\n      io.on('data', function (sensorDataJson) {\n        var sensorData = sensorDataJson ? JSON.parse(sensorDataJson) : {};\n\n        _this.setState({\n          sensorData: sensorData\n        });\n      });\n    };\n\n    _this.getSensors = function () {\n      axios.get('http://0.0.0.0:5000/sensors').then(function (res) {\n        var sensors = [];\n\n        for (var sensorKey in JSON.parse(res.data.sensors)) {\n          sensors.push(JSON.parse(res.data.sensors)[sensorKey]);\n        }\n\n        _this.setState({\n          sensors: sensors\n        });\n\n        console.log(sensors);\n      });\n    };\n\n    _this.render = function () {\n      return React.createElement(\"div\", {\n        className: \"m-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center mt-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Sensors dashboard\")), React.createElement(Container, {\n        style: {\n          marginTop: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, _this.state.sensors.map(function (sensor) {\n        return React.createElement(Row, {\n          className: \"d-flex align-items-center mt-5\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(\"h5\", {\n          style: {\n            width: 100\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, sensor.name));\n      }), React.createElement(Row, {\n        className: \"mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, _this.state.showUrl ? React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Input, {\n        onChange: function onChange(event) {\n          return _this.setState({\n            url: event.target.value\n          });\n        },\n        value: _this.state.url,\n        placeholder: \"URL of destination\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(InputGroupAddon, {\n        addonType: \"append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })) : React.createElement(\"p\", {\n        onClick: function onClick(_) {\n          return _this.setState({\n            showUrl: true\n          });\n        },\n        style: {\n          color: 'blue',\n          cursor: 'pointer'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"send data\"))));\n    };\n\n    return _this;\n  }\n\n  return Dashboard;\n}(Component);\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/Farhad/Desktop/socket/sensors-dashboard/src/Dashboard.js"],"names":["React","Component","Progress","Container","Row","Input","InputGroup","InputGroupAddon","Button","axios","Dashboard","state","sensors","sensorData","showUrl","send_data","url","componentDidMount","getSensors","setInterval","_","io","emit","i","on","sensorDataJson","JSON","parse","setState","get","then","res","sensorKey","data","push","console","log","render","marginTop","map","sensor","width","name","event","target","value","color","cursor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Progress,\n    Container,\n    Row,\n    Input,\n    InputGroup,\n    InputGroupAddon,\n    Button\n} from \"reactstrap\";\nimport axios from 'axios';\n\n\nclass Dashboard extends Component {\n\n    state = {\n        sensors: [],\n        sensorData: {},\n        showUrl: false,\n        send_data: false,\n        url: ''\n    }\n\n    componentDidMount = () => {\n        this.getSensors()\n        setInterval(_ => {\n            io.emit('sensors_data')\n            i++;\n        }, 10000)\n        io.on('data', sensorDataJson => {\n            var sensorData = sensorDataJson ? JSON.parse(sensorDataJson) : {}\n            this.setState({ sensorData })\n        })\n    }\n\n    getSensors = () => {\n        axios.get('http://0.0.0.0:5000/sensors')\n            .then(\n                res => {\n                    var sensors = []\n                    for (var sensorKey in JSON.parse(res.data.sensors)) {\n                        sensors.push(JSON.parse(res.data.sensors)[sensorKey])\n                    }\n                    this.setState({ sensors })\n                    console.log(sensors)\n                }\n            )\n    }\n\n    render = () => {\n        return (\n            <div className='m-5'>\n                <div className='d-flex align-items-center justify-content-center mt-2'>\n                    <h1>Sensors dashboard</h1>\n                </div>\n                <Container style={{ marginTop: 50 }}>\n                    {this.state.sensors.map(sensor => (\n                        <Row className='d-flex align-items-center mt-5'>\n                            <h5 style={{ width: 100 }}>{sensor.name}</h5>\n                            {/* <Progress style={{ width: 300, marginBottom: 5 }} value={this.state.airQaulity.toString()} /> */}\n                        </Row>\n                    ))}\n\n\n                    <Row className='mt-5'>\n                        {this.state.showUrl ? (\n                            <InputGroup>\n                                <Input onChange={event => this.setState({ url: event.target.value })} value={this.state.url} placeholder=\"URL of destination\" />\n                                <InputGroupAddon addonType=\"append\">\n                                    {/* <Button\n                                        onClick={_ => {\n                                            this.setState(prevState => ({ send_data: !prevState.send_data }),\n                                                _ => io.emit('url_info', { url: this.state.url, send_data: this.state.send_data })\n                                            )\n                                        }}\n                                        style={{ backgroundColor: this.state.send_data ? 'red' : 'green' }}>{this.state.send_data ? 'STOP' : 'SEND'}</Button> */}\n                                </InputGroupAddon>\n                            </InputGroup>\n                        ) : (\n                                <p onClick={_ => this.setState({ showUrl: true })} style={{ color: 'blue', cursor: 'pointer' }}>send data</p>\n                            )}\n                    </Row>\n                </Container>\n\n            </div>\n\n        )\n    }\n}\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}