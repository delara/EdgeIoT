{"ast":null,"code":"import _objectSpread from \"/Users/Farhad/Desktop/socket/sensors-dashboard/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/Farhad/Desktop/socket/sensors-dashboard/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/Farhad/Desktop/socket/sensors-dashboard/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Farhad/Desktop/socket/sensors-dashboard/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Farhad/Desktop/socket/sensors-dashboard/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Farhad/Desktop/socket/sensors-dashboard/src/SensorValue.js\";\nimport React, { Component } from 'react';\nimport { Progress, Popover, PopoverBody, InputGroup, Input, InputGroupAddon, UncontrolledDropdown, DropdownItem, DropdownToggle, DropdownMenu } from \"reactstrap\";\nimport { FaCog } from \"react-icons/fa\";\nimport './sensorValue.css';\n\nvar SensorValue =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SensorValue, _Component);\n\n  function SensorValue() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SensorValue);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SensorValue)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      currentValue: 0,\n      config: {\n        type: 'PROGRESS',\n        lowerThreshold: 0,\n        upperThreshold: 2000\n      },\n      ValueConfigPopover: false\n    };\n\n    _this.componentWillReceiveProps = function () {\n      if (_this.props.value > _this.state.config.lowerThreshold && _this.props.value < _this.state.config.upperThreshold) {\n        _this.setState({\n          currentValue: _this.props.value\n        });\n      }\n    };\n\n    _this.render = function () {\n      return React.createElement(\"div\", {\n        className: \"sensor-value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"sensor-value__display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, function (_) {\n        switch (_this.state.config.type) {\n          case 'NUMBER':\n            return React.createElement(\"p\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 46\n              },\n              __self: this\n            }, _this.state.currentValue.toString());\n\n          case 'PROGRESS':\n            return React.createElement(Progress, {\n              max: _this.state.config.upperThreshold - _this.state.config.lowerThreshold,\n              value: (_this.state.currentValue - _this.state.config.lowerThreshold).toString(),\n              style: {\n                width: 200,\n                height: 20\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 50\n              },\n              __self: this\n            });\n\n          case 'LIGHT':\n            return React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 54\n              },\n              __self: this\n            });\n        }\n      }()), React.createElement(Popover, {\n        placement: \"right-end\",\n        className: \"value-display-popover\",\n        isOpen: _this.state.ValueConfigPopover,\n        trigger: \"legacy\",\n        target: \"sensor-add\",\n        toggle: function toggle(_) {\n          return _this.setState(function (prevState) {\n            return {\n              addSensorPopover: !prevState.addSensorPopover\n            };\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(PopoverBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        className: \"add-sensor-form__input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Type\"), React.createElement(UncontrolledDropdown, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(DropdownToggle, {\n        caret: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, _this.state.config.type || 'Select a type'), React.createElement(DropdownMenu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(DropdownItem, {\n        header: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Select Type\"), React.createElement(DropdownItem, {\n        onClick: function onClick(_) {\n          return _this.setState(function (prevState) {\n            return _objectSpread({}, prevState, {\n              config: _objectSpread({}, prevState.config, {\n                type: 'NUMBER'\n              })\n            });\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Number\"), React.createElement(DropdownItem, {\n        onClick: function onClick(_) {\n          return _this.setState(function (prevState) {\n            return _objectSpread({}, prevState, {\n              config: _objectSpread({}, prevState.config, {\n                type: 'PROGRESS'\n              })\n            });\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Progress\"), React.createElement(DropdownItem, {\n        onClick: function onClick(_) {\n          return _this.setState(function (prevState) {\n            return _objectSpread({}, prevState, {\n              config: _objectSpread({}, prevState.config, {\n                type: 'LIGHT'\n              })\n            });\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Light\")))), React.createElement(InputGroup, {\n        className: \"add-sensor-form__input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Lower Threshold\"), React.createElement(Input, {\n        value: _this.state.config.lowerThreshold,\n        onChange: function onChange(e) {\n          return _this.setState(function (prevState) {\n            return _objectSpread({}, prevState, {\n              config: _objectSpread({}, prevState.config, {\n                lowerThreshold: e.target.value\n              })\n            });\n          });\n        },\n        placeholder: \"Lower Threshold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      })), React.createElement(InputGroup, {\n        className: \"add-sensor-form__input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Upper Threshold\"), React.createElement(Input, {\n        value: _this.state.config.upperThreshold,\n        onChange: function onChange(e) {\n          return _this.setState(function (prevState) {\n            return _objectSpread({}, prevState, {\n              config: _objectSpread({}, prevState.config, {\n                upperThreshold: e.target.value\n              })\n            });\n          });\n        },\n        placeholder: \"Upper threshold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      })))), React.createElement(FaCog, {\n        id: \"config\",\n        style: {\n          marginLeft: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }));\n    };\n\n    return _this;\n  }\n\n  return SensorValue;\n}(Component);\n\nexport default SensorValue;","map":{"version":3,"sources":["/Users/Farhad/Desktop/socket/sensors-dashboard/src/SensorValue.js"],"names":["React","Component","Progress","Popover","PopoverBody","InputGroup","Input","InputGroupAddon","UncontrolledDropdown","DropdownItem","DropdownToggle","DropdownMenu","FaCog","SensorValue","state","currentValue","config","type","lowerThreshold","upperThreshold","ValueConfigPopover","componentWillReceiveProps","props","value","setState","render","_","toString","width","height","prevState","addSensorPopover","e","target","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Progress,\n    Popover,\n    PopoverBody,\n    InputGroup,\n    Input,\n    InputGroupAddon,\n    UncontrolledDropdown,\n    DropdownItem,\n    DropdownToggle,\n    DropdownMenu\n} from \"reactstrap\";\nimport { FaCog } from \"react-icons/fa\";\nimport './sensorValue.css'\n\nclass SensorValue extends Component {\n\n    state = {\n        currentValue: 0,\n        config: {\n            type: 'PROGRESS',\n            lowerThreshold: 0,\n            upperThreshold: 2000\n\n        },\n        ValueConfigPopover: false\n    }\n\n    componentWillReceiveProps = () => {\n        if (this.props.value > this.state.config.lowerThreshold && this.props.value < this.state.config.upperThreshold) {\n            this.setState({ currentValue: this.props.value })\n        }\n    }\n\n\n\n    render = () => {\n        return (\n            <div className='sensor-value'>\n                <div className='sensor-value__display'>\n                    {(_ => {\n                        switch (this.state.config.type) {\n                            case 'NUMBER':\n                                return (\n                                    <p>{this.state.currentValue.toString()}</p>\n                                )\n                            case 'PROGRESS':\n                                return (\n                                    <Progress max={this.state.config.upperThreshold - this.state.config.lowerThreshold} value={(this.state.currentValue - this.state.config.lowerThreshold).toString()} style={{ width: 200, height: 20 }} />\n                                )\n                            case 'LIGHT':\n                                return (\n                                    <div />\n                                )\n                        }\n                    })()\n\n                    }\n                </div>\n                <Popover placement=\"right-end\" className=\"value-display-popover\" isOpen={this.state.ValueConfigPopover} trigger='legacy' target=\"sensor-add\" toggle={_ => this.setState(prevState => ({ addSensorPopover: !prevState.addSensorPopover }))}>\n                    <PopoverBody>\n                        <InputGroup className=\"add-sensor-form__input\">\n                            <InputGroupAddon addonType=\"prepend\" >Type</InputGroupAddon>\n                            <UncontrolledDropdown>\n                                <DropdownToggle caret>\n                                    {this.state.config.type || 'Select a type'}\n                                </DropdownToggle>\n                                <DropdownMenu>\n                                    <DropdownItem header>Select Type</DropdownItem>\n                                    <DropdownItem onClick={_ => this.setState(prevState => ({ ...prevState, config: { ...prevState.config, type: 'NUMBER' } }))}>Number</DropdownItem>\n                                    <DropdownItem onClick={_ => this.setState(prevState => ({ ...prevState, config: { ...prevState.config, type: 'PROGRESS' } }))}>Progress</DropdownItem>\n                                    <DropdownItem onClick={_ => this.setState(prevState => ({ ...prevState, config: { ...prevState.config, type: 'LIGHT' } }))}>Light</DropdownItem>\n                                </DropdownMenu>\n                            </UncontrolledDropdown>\n                        </InputGroup>\n                        <InputGroup className=\"add-sensor-form__input\">\n                            <InputGroupAddon addonType=\"prepend\" >Lower Threshold</InputGroupAddon>\n                            <Input value={this.state.config.lowerThreshold} onChange={e => this.setState(prevState => ({ ...prevState, config: { ...prevState.config, lowerThreshold: e.target.value } }))} placeholder=\"Lower Threshold\" />\n                        </InputGroup>\n                        <InputGroup className=\"add-sensor-form__input\">\n                            <InputGroupAddon addonType=\"prepend\" >Upper Threshold</InputGroupAddon>\n                            <Input value={this.state.config.upperThreshold} onChange={e => this.setState(prevState => ({ ...prevState, config: { ...prevState.config, upperThreshold: e.target.value } }))} placeholder=\"Upper threshold\" />\n                        </InputGroup>\n\n                    </PopoverBody>\n                </Popover>\n                <FaCog id='config' style={{ marginLeft: 20 }} />\n            </div>\n        )\n    }\n}\n\nexport default SensorValue;"]},"metadata":{},"sourceType":"module"}