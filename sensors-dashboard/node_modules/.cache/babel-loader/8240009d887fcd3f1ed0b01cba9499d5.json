{"ast":null,"code":"import _classCallCheck from \"/Users/Farhad/Desktop/socket/sensors-dashboard/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/Farhad/Desktop/socket/sensors-dashboard/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Farhad/Desktop/socket/sensors-dashboard/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Farhad/Desktop/socket/sensors-dashboard/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Farhad/Desktop/socket/sensors-dashboard/src/SensorValue.js\";\nimport React, { Component } from 'react';\nimport { Progress, Popover, PopoverBody } from \"reactstrap\";\nimport { FaCog } from \"react-icons/fa\";\nimport './sensorValue.css';\n\nvar SensorValue =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SensorValue, _Component);\n\n  function SensorValue() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SensorValue);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SensorValue)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      currentValue: 0,\n      config: {\n        type: 'PROGRESS',\n        lowerThreshold: 0,\n        upperThreshold: 2000\n      }\n    };\n\n    _this.componentWillReceiveProps = function () {\n      if (_this.props.value > _this.state.config.lowerThreshold && _this.props.value < _this.state.config.upperThreshold) {\n        _this.setState({\n          currentValue: _this.props.value\n        });\n      }\n    };\n\n    _this.render = function () {\n      return React.createElement(\"div\", {\n        className: \"sensor-value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"sensor-value__display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, function (_) {\n        switch (_this.state.config.type) {\n          case 'NUMBER':\n            return React.createElement(\"p\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 34\n              },\n              __self: this\n            }, _this.state.currentValue.toString());\n\n          case 'PROGRESS':\n            return React.createElement(Progress, {\n              max: _this.state.config.upperThreshold - _this.state.config.lowerThreshold,\n              value: (_this.state.currentValue - _this.state.config.lowerThreshold).toString(),\n              style: {\n                width: 200,\n                height: 20\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 38\n              },\n              __self: this\n            });\n\n          case 'light':\n            return React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 42\n              },\n              __self: this\n            });\n        }\n      }()), React.createElement(Popover, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(PopoverBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        className: \"add-sensor-form__input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Type\"), React.createElement(UncontrolledDropdown, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(DropdownToggle, {\n        caret: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, pins.find(function (p) {\n        return p.value === _this.state.sensorIOPin;\n      }) && pins.find(function (p) {\n        return p.value === _this.state.sensorIOPin;\n      })['label'] || 'Select an input pin'), React.createElement(DropdownMenu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(DropdownItem, {\n        header: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Header\"), pins.map(function (pin) {\n        return React.createElement(DropdownItem, {\n          onClick: function onClick(_) {\n            return _this.setState({\n              sensorIOPin: pin.value\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, pin.label);\n      })))), React.createElement(InputGroup, {\n        className: \"add-sensor-form__input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Name\"), React.createElement(Input, {\n        value: _this.state.sensorName,\n        onChange: function onChange(e) {\n          return _this.setState({\n            sensorName: e.target.value\n          });\n        },\n        placeholder: \"Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })), React.createElement(InputGroup, {\n        className: \"add-sensor-form__input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Xbee Id\"), React.createElement(Input, {\n        value: _this.state.sensorXbeeId,\n        onChange: function onChange(e) {\n          return _this.setState({\n            sensorXbeeId: e.target.value\n          });\n        },\n        placeholder: \"Xbee Id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })))), React.createElement(FaCog, {\n        style: {\n          marginLeft: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }));\n    };\n\n    return _this;\n  }\n\n  return SensorValue;\n}(Component);\n\nexport default SensorValue;","map":{"version":3,"sources":["/Users/Farhad/Desktop/socket/sensors-dashboard/src/SensorValue.js"],"names":["React","Component","Progress","Popover","PopoverBody","FaCog","SensorValue","state","currentValue","config","type","lowerThreshold","upperThreshold","componentWillReceiveProps","props","value","setState","render","_","toString","width","height","pins","find","p","sensorIOPin","map","pin","label","sensorName","e","target","sensorXbeeId","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Progress, Popover, PopoverBody } from \"reactstrap\";\nimport { FaCog } from \"react-icons/fa\";\nimport './sensorValue.css'\n\nclass SensorValue extends Component {\n\n    state = {\n        currentValue: 0,\n        config: {\n            type: 'PROGRESS',\n            lowerThreshold: 0,\n            upperThreshold: 2000\n\n        }\n    }\n\n    componentWillReceiveProps = () => {\n        if (this.props.value > this.state.config.lowerThreshold && this.props.value < this.state.config.upperThreshold) {\n            this.setState({ currentValue: this.props.value })\n        }\n    }\n\n\n\n    render = () => {\n        return (\n            <div className='sensor-value'>\n                <div className='sensor-value__display'>\n                    {(_ => {\n                        switch (this.state.config.type) {\n                            case 'NUMBER':\n                                return (\n                                    <p>{this.state.currentValue.toString()}</p>\n                                )\n                            case 'PROGRESS':\n                                return (\n                                    <Progress max={this.state.config.upperThreshold - this.state.config.lowerThreshold} value={(this.state.currentValue - this.state.config.lowerThreshold).toString()} style={{ width: 200, height: 20 }} />\n                                )\n                            case 'light':\n                                return (\n                                    <div />\n                                )\n                        }\n                    })()\n\n                    }\n                </div>\n                <Popover>\n                    <PopoverBody>\n                        <InputGroup className=\"add-sensor-form__input\">\n                            <InputGroupAddon addonType=\"prepend\" >Type</InputGroupAddon>\n                            <UncontrolledDropdown>\n                                <DropdownToggle caret>\n                                    {pins.find(p => p.value === this.state.sensorIOPin) && pins.find(p => p.value === this.state.sensorIOPin)['label'] || 'Select an input pin'}\n                                </DropdownToggle>\n                                <DropdownMenu>\n                                    <DropdownItem header>Header</DropdownItem>\n                                    {pins.map(pin => (\n                                        <DropdownItem onClick={_ => this.setState({ sensorIOPin: pin.value })} >{pin.label}</DropdownItem>\n                                    ))}\n                                </DropdownMenu>\n                            </UncontrolledDropdown>\n                            {/* <Input value={this.state.sensorIOPin} onChange={e => this.setState({ sensorIOPin: e.target.value })} placeholder=\"Input Pin\" /> */}\n                        </InputGroup>\n                        <InputGroup className=\"add-sensor-form__input\">\n                            <InputGroupAddon addonType=\"prepend\" >Name</InputGroupAddon>\n                            <Input value={this.state.sensorName} onChange={e => this.setState({ sensorName: e.target.value })} placeholder=\"Name\" />\n                        </InputGroup>\n                        <InputGroup className=\"add-sensor-form__input\">\n                            <InputGroupAddon addonType=\"prepend\" >Xbee Id</InputGroupAddon>\n                            <Input value={this.state.sensorXbeeId} onChange={e => this.setState({ sensorXbeeId: e.target.value })} placeholder=\"Xbee Id\" />\n                        </InputGroup>\n\n                    </PopoverBody>\n                </Popover>\n                <FaCog style={{ marginLeft: 20 }} />\n            </div>\n        )\n    }\n}\n\nexport default SensorValue;"]},"metadata":{},"sourceType":"module"}